#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Visione generale delle strategie di verifica
\end_layout

\begin_layout Subsection
Organizzazione
\end_layout

\begin_layout Standard
Per poter effettuare un corretto processo di verifica si è scelto di effettuare
 le dovute operazioni di controllo quando il prodotto sotto analisi avrà
 raggiunto uno stadio tale per cui risulta presentare sostanziali modifiche
 rispetto alla precedente versione.
 Lo svolgimento di tale fase sarà aggevolato grazie all'apposito registro
 delle modifiche; inoltre, per garantire una migliore verifica si è adottato
 il 
\begin_inset Quotes eld
\end_inset

Broken Window Theory
\begin_inset Quotes erd
\end_inset

 secondo il quale, non appena un errore viene rilevato, questo andrà segnalato
 e corretto il prima possibile onde evitarne la propagazione incontrollata.
\end_layout

\begin_layout Standard
Il ciclo di vita scelto per lo sviluppo del progetto è un ciclo di vita
 incrementale (vedi Piano di Progetto) e di conseguenza le operazioni di
 verifica verranno realizzate in modo tale da intervenire in maniera coerente
 nelle varie fasi del progetto come illustrato di seguito: 
\end_layout

\begin_layout Itemize
Analisi dei requisiti: ogni documento necessario alla RR, quando verrà completat
o, entrerà nella dedicata fase di revisione per controllare la presenza
 di eventuali inregolarità lessico/grammaticali e nei contenuti esposti.
 Nel dettaglio il controllo grammaticale verrà effettuato con gli strumenti
 messi a disposizione da LyX (dobbiamo approfondire questo aspetto), mentre
 il controllo lessicale da un'accurata rilettura del testo.
 I contenuti verranno invece controllati in modo tale da verificare la copertura
 delle richieste del proponente e questo tramite un'accurata rilettura e
 confronto con il documento d'appalto (si chiama così???) e che ogni requisito
 abbia il suo caso d'uso corrispondente.
 Verranno verificati inoltre i contenuti grafici e tabellari e la conformità
 dei documenti alle Norme di Progetto stabilite.
 Se durante la verifica saranno state rilevate inregolarità queste verranno
 segnalate tramite apposita Issue dal verificatore e corrette dal redattore.
 Il processo di verifica si concluderà quindi con la validazione del documento
 da parte del verificatore e l'approvazione da parte del responsabile per
 la presentazione al committente.
\end_layout

\begin_layout Itemize
Progettazione: il processo di verifica riguardante la fase di Progettazione
 consisterà nel verificare che tutti i requisiti descritti durante la fase
 di Analisi dei Requisiti rientrino nei componenti individuati.
 Qual'ora dalla verifica sorgano incongruenze o mancanze, queste verranno
 segnalate tramite Issue e successivamente risolte (chiarire questo punto).
\end_layout

\begin_layout Itemize
Realizzazione: la verifica in questa fase verrà effettuata sia da parte
 dei programmatori stessi che utilizzando appositi e specifici strumenti
 di verifica automatizzata del codice.
 Un esempio di questi strumenti riguarda il sito web W3C per controllare
 la conformità delle pagine html realizzate agli standard o FireBug.
 La resenza di errori verrà segnalata da un apposita Issue che verrà presa
 in carico dai programmatori e chiusa una volta risolto il problema.
 (questa parte va sistemata e resa più precisa)
\end_layout

\begin_layout Itemize
Validazione: (questa sezione è particolare e dobbiamo discutere insieme
 cosa inserire)
\end_layout

\begin_layout Subsection
Pianificazione strategica e temporale
\end_layout

\begin_layout Standard
La strategia di verifica adottata prevede, come da sottocapitolo 2.1, una
 verifica ogni qualvolta il prodotto da noi realizzato abbia raggiunto uno
 stadio tale che si differenzi dalla sua precedente versione.
 Questa, unita alla tecnica 
\begin_inset Quotes eld
\end_inset

Broken Window Theory
\begin_inset Quotes erd
\end_inset

, cerca di garantire un alto livello di qualità al fine di raggiungere il
 totale soddisfacimento dei requisiti richiesti dal capitolato d'appalto
 oltre che del cliente.
 Il responsabile di progetto avrà quindi il compito di coordinare e definire
 le attività volte alla verifica del materiale prodotto, sia esso software,
 documenti o materiale d'altro genere.
 (Da espandere)
\end_layout

\begin_layout Subsection
Responsabilità
\end_layout

\begin_layout Standard
Al Responsabile di Progetto saranno affidate le responsabilità riguardanti
 tutte le attività di verifica e validazione, ponendosi quindi come garante
 del corretto svolgimento delle attività volte alla qualità del materiale
 prodotto nei confronti del committente.
 L'Amministratore di Progetto si occuperà invece di assicurare che l'ambiente
 in cui tutte le attività di realizzazione del prodotto si svolgeranno sia
 adeguato a tale scopo.
 
\end_layout

\begin_layout Subsection
Risorse
\end_layout

\begin_layout Standard
La gestione della qualità prevede l'utilizzo di alcune risorse
\end_layout

\begin_layout Subsubsection
Risorse Necessarie
\end_layout

\begin_layout Standard

\series bold
Risorse Umane
\end_layout

\begin_layout Standard
L'organigramma relativo alla garanzia di qualità è:
\end_layout

\begin_layout Itemize

\series bold
Responsabile 
\series default
è il referente e responsabile nei confronti del committente, supervisiona
 i processi interni e si preoccupa di valutare le proposte di modifica correttiv
a o migliorativa dei Verificatori.
\end_layout

\begin_layout Itemize

\series bold
Ammistratore
\series default
 definisce i piani per la gestione della qualità, come i processi di verifica,
 test e individuazione e risoluzione delle anomalie e discrepanze.
\end_layout

\begin_layout Itemize

\series bold
Verificatore
\series default
 esegue le attività di verifica sul prodotto a seconda delle norme redatte,
 ne riassumerà gli esiti e in caso di discrepanze presenterà il problema
 al Responsabile.
\end_layout

\begin_layout Itemize

\series bold
Programamtore 
\series default
è incentivato a eseguire attività di debugging quando ne riterrà necessario
 ed è coinvolto dai verificatori nella risoluzione dei ticket.
\end_layout

\begin_layout Standard

\series bold
Risorse Software
\end_layout

\begin_layout Itemize
Software per la verifica dei requisiti richiesti.
\end_layout

\begin_layout Itemize
Software di gestione e commento di ticket, codice e documentazione.
\end_layout

\begin_layout Itemize
Software necessario alla corretta configurazione dell'ambiente di sviluppo.
\end_layout

\begin_layout Itemize
Software utile alla comunicazione fra i membri del team.
\end_layout

\begin_layout Standard

\series bold
Risorse Hardware
\end_layout

\begin_layout Itemize
Computer su cui eseguire il software necessario all'ambiente di sviluppo.
\end_layout

\begin_layout Itemize
Luogo fisico per incontri fra i membri del team.
\end_layout

\begin_layout Subsubsection
Risorse Disponibili
\end_layout

\begin_layout Standard

\series bold
Risorse Software
\end_layout

\begin_layout Itemize
Risorse messe a disposizione dal servizio web Github per gestire commenti
 o problemi a codice, documentazione e ticket.
\end_layout

\begin_layout Itemize
Eclipse con relativi strumenti già inclusi o aggiunti tramite plugin.
\end_layout

\begin_layout Itemize
Strumenti W3C per validazione web.
\end_layout

\begin_layout Itemize
Gruppo Facebook per poter comunicare fra membri del team.//?
\end_layout

\begin_layout Standard

\series bold
Risorse Hardware
\end_layout

\begin_layout Itemize
Computer personali, portatili e fissi.
\end_layout

\begin_layout Itemize
Computer messi a disposizione nei laboratori dal Dipartimento di Matematica
 Pura ed Applicata dell'Università di Padova.
\end_layout

\begin_layout Itemize
Aule studio del Dipartimento di Matematica Pura ed Applicata dell'Università
 di Padova.
\end_layout

\begin_layout Subsection
Strumenti, tecniche e metodi
\end_layout

\end_body
\end_document
