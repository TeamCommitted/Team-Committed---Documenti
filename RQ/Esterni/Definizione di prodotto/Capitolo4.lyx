#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{longtable}
\usepackage{multirow}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 4
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Specifica Back-end
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/BackEnd.png
	scale 42.5

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Back-end, diagramma dei package
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Package com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Package 
\series bold
com
\emph default
\SpecialChar \-

\emph on
.
\emph default
\SpecialChar \-

\emph on
sa
\emph default
\SpecialChar \-

\emph on
fe
\emph default
\SpecialChar \-

\emph on
ty
\emph default
\SpecialChar \-

\emph on
Ga
\emph default
\SpecialChar \-

\emph on
me
\emph default
\SpecialChar \-

\emph on
.
\emph default
\SpecialChar \-

\emph on
back
\emph default
\SpecialChar \-

\emph on
.\SpecialChar \-
con\SpecialChar \-
nec\SpecialChar \-
tion
\series default
 e le sue relazioni
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Tipo, obiettivo e funzione del componente:
\series default
 contiene gli oggetti deputati all'interfacciamento dei vari front-end con
 il back-end
\series bold

\begin_inset Newline newline
\end_inset

Relazioni d'uso di altre componenti:
\series default
 utilizza la classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le richieste che provengono dai vari front-end verso gli strati
 inferiori del back-end
\series bold

\begin_inset Newline newline
\end_inset

Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del back-end
 verso i vari front-end
\emph on

\begin_inset Newline newline
\end_inset


\series bold
\emph default
Attività svolte e dati trattati:
\series default
 fa da connettore fra i vari front-end e il back-end, divenendo il componente
 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion.WebConnection
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestioneDati
\begin_inset space ~
\end_inset

dati 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Attributo necessario per mettere in collegamento la classe con il 
\emph on
Controller-Tier
\emph default
 per la gestione delle richieste dei 
\emph on
Front-End Web
\emph default
 e 
\emph on
Desktop
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

WebConnection(GestioneDati
\begin_inset space ~
\end_inset

dati)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

getDati(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

login(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadge(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modPass(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modMail(String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

resetPass(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

mostraDomanda(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

posticipa(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

rispondi(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

risposta)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

logout(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

getElencoDomande(boolean
\begin_inset space ~
\end_inset

interne)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

aggiungiDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

cancellaDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

getElencoDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

setTrofei(String
\begin_inset space ~
\end_inset

dipendente,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

aggiungiDipendente(String
\begin_inset space ~
\end_inset

nome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaDipendente(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modNome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

nome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCognome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCodFis(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis)
\end_layout

\begin_layout Description
+void
\begin_inset space ~
\end_inset

modUsername(String
\begin_inset space ~
\end_inset

usernameOld,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modImpiego(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion.MobileConnection
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 
\series medium
la classe si occupa di gestire le richieste del 
\emph on
Front-End Mobile
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dal 
\emph on
Front-end Mobile 
\emph default
ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso il 
\emph on
Front-End Mobile
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra il 
\emph on
Front-End Mobile
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler
\series default
 e le sue relazioni
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 contiene gli oggetti deputati all'interfacciamento dei vari front-end con
 il back-end
\series bold

\begin_inset Newline newline
\end_inset

Relazioni d'uso di altre componenti:
\series default
 utilizza la classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
ba\SpecialChar \-
ck\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le richieste che provengono dai vari front-end verso gli strati
 inferiori del back-end
\series bold

\begin_inset Newline newline
\end_inset

Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del back-end
 verso i vari front-end
\emph on

\begin_inset Newline newline
\end_inset


\series bold
\emph default
Attività svolte e dati trattati:
\series default
 fa da connettore fra i vari front-end e il back-end, divenendo il componente
 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDati
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadge(int
\begin_inset space ~
\end_inset

ultimi,
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadges() 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getMyBadges(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

bool
\begin_inset space ~
\end_inset

recupero(Recupero
\begin_inset space ~
\end_inset

r) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

checkLogin(Login
\begin_inset space ~
\end_inset

login) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

modificaDipendente(Dipendente
\begin_inset space ~
\end_inset

vecchio,
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

nuovo) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

getDipendenti() 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

getListaCalderone() 
\end_layout

\begin_layout Description
+Domanda[]
\begin_inset space ~
\end_inset

getListaDomande() 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomandaD(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

getDistanzaD(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatAzienda() 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatDipendente(Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatDomanda(Domanda
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatistiche(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatisticheAzienda() 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getDistanzaPunti(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDipendente(Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomande(int[]
\begin_inset space ~
\end_inset

idDom) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

creaBadges(Badge
\begin_inset space ~
\end_inset

b) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

eliminaDipendente(Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

eliminaDomande(int[]
\begin_inset space ~
\end_inset

idDom) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomPost(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomProp(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomRic(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomRisp(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviLogin(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviLogout(Login
\begin_inset space ~
\end_inset

l) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviModEmailD(Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviModPassD(Dipendente
\begin_inset space ~
\end_inset

d) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviOttenimentoBadge(Dipendente
\begin_inset space ~
\end_inset

d,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

setRisposta(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Risposta
\begin_inset space ~
\end_inset

r) 
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

setRisposta(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Risposta
\begin_inset space ~
\end_inset

r) 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneLogin
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOLogin
\begin_inset space ~
\end_inset

daoLogin
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

gestioneLog
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneLogin(DAOLogin
\begin_inset space ~
\end_inset

d,
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

g)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

checkLogin(Login
\begin_inset space ~
\end_inset

login)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDomandeD
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAODomande
\begin_inset space ~
\end_inset

daoDomande
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestionePunteggiD
\begin_inset space ~
\end_inset

gestionePunteggiD
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

gestioneLog
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneDomandeD(DAODomande
\begin_inset space ~
\end_inset

d,
\begin_inset space ~
\end_inset

GestionePunteggiD
\begin_inset space ~
\end_inset

gp,
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

gl)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

setRisposta(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Risposta
\begin_inset space ~
\end_inset

r)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDomandeAS
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAODomande
\begin_inset space ~
\end_inset

daDomande
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneDomandeAS(DAODomande
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

getListaDomande()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

getListaCalderone()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomande(int[]
\begin_inset space ~
\end_inset

idDom)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

eliminaDomande(int[]
\begin_inset space ~
\end_inset

idDom)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestionePunteggiD
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOPunteggi
\begin_inset space ~
\end_inset

daoPunteggi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

daoBadge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestionePunteggiD(DAOPunteggi
\begin_inset space ~
\end_inset

dp,
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

db)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatisticheAzienda()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatistiche(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestionePunteggiAA
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOPunteggi
\begin_inset space ~
\end_inset

daoPunteggi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

daoBadge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestionePunteggiAA(DAOPunteggi
\begin_inset space ~
\end_inset

dp,
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

db)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatAzienda()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatDipendente(Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio[]
\begin_inset space ~
\end_inset

getStatDomanda(Domanda
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadge(int
\begin_inset space ~
\end_inset

ultimi,
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDipendentiD
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAODomande
\begin_inset space ~
\end_inset

daoDomande
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestionePunteggiD
\begin_inset space ~
\end_inset

gestionePunteggiD
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

gestioneLog
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneDomandeD(DAODomande
\begin_inset space ~
\end_inset

dd,
\begin_inset space ~
\end_inset

GestionePunteggiD
\begin_inset space ~
\end_inset

gpd,
\begin_inset space ~
\end_inset

GestioneLog
\begin_inset space ~
\end_inset

gl)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomandaD(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

setRisposta(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Risposta
\begin_inset space ~
\end_inset

r)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDipendentiAA
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAODipendenti
\begin_inset space ~
\end_inset

daoDipendenti
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneDipendentiAA(DAODipendenti
\begin_inset space ~
\end_inset

dp)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

getDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDipendente(Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

eliminaDipendente(Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

modificaDipendente(Dipendente
\begin_inset space ~
\end_inset

vecchio,
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

nuovo)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneBadgeD
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

daoBadge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneBadgeD(DAOBadge
\begin_inset space ~
\end_inset

db)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadges()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getDistanzaPunti(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getMyBadges(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

getDistanzaD(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneBadgeAS
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAOBadge
\begin_inset space ~
\end_inset

daoBadge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneBadgeAS(DAOBadge
\begin_inset space ~
\end_inset

db)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

getBadges()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

creaBadges(Badge
\begin_inset space ~
\end_inset

b)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneRecupero
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

email
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

DAODipendente
\begin_inset space ~
\end_inset

daoDipendente
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneRecupero(String
\begin_inset space ~
\end_inset

email,
\begin_inset space ~
\end_inset

DAODipendente
\begin_inset space ~
\end_inset

dd)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

bool
\begin_inset space ~
\end_inset

recupero(Recupero
\begin_inset space ~
\end_inset

r)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneLog
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

UpdateLog
\begin_inset space ~
\end_inset

updateLog
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

GestioneLog(UpdateLog
\begin_inset space ~
\end_inset

ul)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviLogin(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviLogout(Login
\begin_inset space ~
\end_inset

l)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomRic(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomProp(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomPost(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviDomRisp(Login
\begin_inset space ~
\end_inset

l,
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviModPassD(Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviModEmailD(Dipendente
\begin_inset space ~
\end_inset

d)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

scriviOttenimentoBadge(Dipendente
\begin_inset space ~
\end_inset

d,
\begin_inset space ~
\end_inset

Badge
\begin_inset space ~
\end_inset

b)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com.safetyGame.back.access
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Standard
Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOFactory
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

loginLimitato(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

login(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

getInfo(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

posticipa(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

rispondi(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

risposta)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passD(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passA(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

mailD(String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

elencoDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

aggiungiDipendente(String
\begin_inset space ~
\end_inset

nome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

Stirng
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaDipendente(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modNome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

nome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCognome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCodFis(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modUsername(String
\begin_inset space ~
\end_inset

usernameOld,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modImpiego(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

trofei(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

reset(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

badgeD(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

domandeA(boolean
\begin_inset space ~
\end_inset

interne)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

remDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

logout(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAOFactory
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

Indirizzo
\begin_inset space ~
\end_inset

serverDomande
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

Indirizzo
\begin_inset space ~
\end_inset

serverAzienda
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

SqlDAOLogin
\begin_inset space ~
\end_inset

login
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

SqlDAODipendenti
\begin_inset space ~
\end_inset

dipendenti
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

SqlDAODomande
\begin_inset space ~
\end_inset

domande
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

SqlDAOPunteggi
\begin_inset space ~
\end_inset

punteggi
\end_layout

\begin_layout Description
-
\begin_inset space ~
\end_inset

SqlDAOBadge
\begin_inset space ~
\end_inset

badge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

SqlDAOFactory()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

loginLimitato(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

login(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente
\begin_inset space ~
\end_inset

getInfo(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

posticipa(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

rispondi(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

risposta)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passD(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passA(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

mailD(String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

elencoDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

aggiungiDipendente(String
\begin_inset space ~
\end_inset

nome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

Stirng
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaDipendente(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modNome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

nome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCognome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCodFis(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modUsername(String
\begin_inset space ~
\end_inset

usernameOld,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modImpiego(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

trofei(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

reset(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Badge[]
\begin_inset space ~
\end_inset

badgeD(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

domandeA(boolean
\begin_inset space ~
\end_inset

interne)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

remDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

logout(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOLogin
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

loginLimitato(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

login(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

logout(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAOLogin
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

SqlDAOLogin()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

loginLimitato(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

login(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

logout(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAODipendenti
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passD(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passA(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

mailD(String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

elencoDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

aggiungiDipendente(String
\begin_inset space ~
\end_inset

nome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaDipendente(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modNome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

nome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCognome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCodFis(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modUsername(Stirng
\begin_inset space ~
\end_inset

usernameOld,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modImpiego(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

trofei(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

reset(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAODipendenti
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passD(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

passA(String
\begin_inset space ~
\end_inset

pass,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

mailD(String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Dipendente[]
\begin_inset space ~
\end_inset

elencoDipendenti()
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

aggiungiDipendente(String
\begin_inset space ~
\end_inset

nome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaDipendente(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modNome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

nome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCognome(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

cognome)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modCodFis(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modUsername(Stirng
\begin_inset space ~
\end_inset

usernameOld,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

modImpiego(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

impiego)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

trofei(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

reset(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

codfis,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

mail)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAODomande
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

posticipa(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

rispondi(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

risposta)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

domandeA(boolean
\begin_inset space ~
\end_inset

interne)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

remDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAODomande
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda
\begin_inset space ~
\end_inset

getDomanda(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

posticipa(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

rispondi(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

risposta)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Domanda[]
\begin_inset space ~
\end_inset

domandeA(boolean
\begin_inset space ~
\end_inset

interne)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

addDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

remDomanda(int
\begin_inset space ~
\end_inset

id)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOPunteggi
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di recuperare i dati riguardanti i Punteggi dei
 Dipendenti e dell'Azienda.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

Punteggio
\begin_inset space ~
\end_inset

getStat(String
\begin_inset space ~
\end_inset

username)
\end_layout

\begin_layout Description
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

trofei(String
\begin_inset space ~
\end_inset

username,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

n)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
.access
\series default
.SqlDAOPunteggi
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di recuperare i dati riguardanti i Punteggi dei
 Dipendenti e dell'Azienda da un database Sql.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard
- Indirizzo serverAzienda; 
\begin_inset Newline newline
\end_inset

- Indirizzo serverDomande;
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard
+ SqlDAOPunteggi(Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset

+ Punteggio getStat(Dipendente d)
\end_layout

\begin_layout Standard
+ Punteggio getGlobalStat(Dipendente dip)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.UpdateLog
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- PrintWriter out
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ UpdateLog(String s)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\series bold


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void finalize()
\end_layout

\begin_layout Standard
Distruttore della classe: dovrà chiudere lo stream al file di log
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ void scrivi(String s)
\end_layout

\begin_layout Standard
Aggiunge una nuova riga al file di log
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ void scriviChiudi(String s)
\end_layout

\begin_layout Standard
Aggiunge una nuova riga al file e chiude lo stream al file di log
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.Indirizzo
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe contiene tutti i metodi per l'esecuzione di query all'interno
 dei database (azienda e centrale)
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipententi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Connection conn
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Statement connettore
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+
\begin_inset space ~
\end_inset

Indirizzo(String
\begin_inset space ~
\end_inset

database,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

utente,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Standard
Costruttore che imposta il valore degli attributi secondo il valore dei
 parametri passati.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

finalize()
\end_layout

\begin_layout Standard
Distruttore della classe Indirizzo: prova a chiudere la connessione al database
 quando l'oggetto viene distrutto.
 Nel caso di lancio di eccezioni, dovrà stampare a video un messaggio d'errore
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

inserisciRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

colonne,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

[]
\begin_inset space ~
\end_inset

valori)
\end_layout

\begin_layout Standard
Crea, a partire dall'array 
\emph on
valori
\emph default
, una stringa (che chiameremo 
\emph on
val
\emph default
) che contiene tutti i valori contenuti.
 Dovrà avere la seguente struttura:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\emph on
(?,?....,?)
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ripetendo tanti punti interrogativi quanti sono gli elementi dentro all'array
\emph on
 valori
\emph default
.
 Quindi crea la query da eseguire sul database utilizzando:
\end_layout

\begin_layout Itemize

\series bold
tabella:
\series default
 nome della tabella su cui eseguire la query
\end_layout

\begin_layout Itemize

\series bold
colonne:
\series default
 colonne dove andranno inseriti i dati.
 Al contenuto di questa variabile dovrà essere applicata una funzione per
 eliminare eventuali caratteri di spaziatura
\end_layout

\begin_layout Itemize

\series bold
val
\end_layout

\begin_layout Standard
Quindi i punti interrogativi saranno sostituiti dai valori contenuti nell'array
 
\emph on
valori
\emph default
.
 Se la funzione di esecuzione della query non lancerà alcuna eccezione,
 questo metodo si concluderà ritornando 
\series bold
true
\series default
.
 Altrimenti dovrà ritornare 
\series bold
false
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

modificaRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

colonnevalori,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

controlli)
\end_layout

\begin_layout Standard
Modifica una tupla di valori all'interno della tabella indicata, selezionandola
 secondo i parametri di controllo indicati
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

controlli)
\end_layout

\begin_layout Standard
Elimina una tupla di valori all'interno della tabella indicata, seleziondola
 secondo i parametri di controllo indicati
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

ResultSet selezione(String tabella, String colonne, String controlli, String
 extra)
\end_layout

\begin_layout Standard
Prevela una tupla di valori all'interno della tabella indicata, selezionandola
 secondo i parametri di controllo indicati
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com.safetyGame.back.condivisi
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 il package contiene le classi che conterranno le informazioni che dovranno
 essere condivise fra i vari strati del 
\emph on
Back-end
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 non utilizza alcun componente del 
\emph on
Back-end
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato da tutte le classi dei package 
\emph on
controller, access 
\emph default
e 
\emph on
connection
\emph default
 per trasmettere informazioni complesse
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 serve a trasferire le informazioni che dovranno essere condivise fra i
 vari package che compongono il 
\emph on
back-end
\emph default
.
 In particolare si occuperà di contenere le informazioni riguardanti:
\end_layout

\begin_layout Itemize

\series bold
Badge
\end_layout

\begin_layout Itemize

\series bold
Dipendenti
\end_layout

\begin_layout Itemize

\series bold
Domande
\end_layout

\begin_layout Itemize

\series bold
Login
\end_layout

\begin_layout Itemize

\series bold
Punteggi
\end_layout

\begin_layout Itemize

\series bold
Richieste di recupero password
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Badge
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.convidisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String nome
\end_layout

\begin_layout Standard
Nome del badge
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String descrizione
\end_layout

\begin_layout Standard
Descrizione del badge (ex.
 la motivazione per cui si è guadagnato questo badge)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio soglia
\end_layout

\begin_layout Standard
Indica il quantitativo di punti necessari all'acquisizione del badge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Badge(String nome, String d, Punteggio p)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Badge()
\end_layout

\begin_layout Standard
Costruttore di default che dovrà inizializzare ogni attributo a 
\series bold
NULL
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\series bold

\begin_inset Newline newline
\end_inset

+ String getNome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNome(String nome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getDescrizione()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDescrizione(String descrizione)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getSoglia()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setSoglia(Punteggio soglia)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.DataOra
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per le date e le ore
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.badge
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

anno
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

mese
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- int
\begin_inset space ~
\end_inset

giorno
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

ora
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

minuti
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

secondi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+
\begin_inset space ~
\end_inset

DataOra(int
\begin_inset space ~
\end_inset

a,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

me,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

g,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

o,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

mi,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

s) 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Costruttore che imposta gli attributi dell'oggetto alla data e all'ora specifica
ta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

DataOra() 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Costruttore di default che crea l'oggetto con la data e l'ora corrente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

static
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

aggiusta(int
\begin_inset space ~
\end_inset

parteData) 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Funzione statica che deve restituire la parte della data (ex.
 giorno) scritta con due cifre (ex.
 se si è al giorno 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

, questa funzione deve restituire una stringa con scritto 
\begin_inset Quotes eld
\end_inset

02
\begin_inset Quotes erd
\end_inset

)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

toString() 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Restituisce una stringa dell'oggetto nel seguente formato:
\end_layout

\begin_layout Standard

\family typewriter
AAAA/MM/GG HH:MM:SS
\family default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ int getAnno()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAnno(int anno)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getMese()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMese(int mese)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getGiorno()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setGiorno(int giorno)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getOra()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setOra(int ora)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getMinuti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMinuti(int minuti)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getSecondi()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setSecondi(int secondi)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Dipendente
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Dipendenti
 che sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Recupero 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiAA 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int id 
\end_layout

\begin_layout Standard
Numero univoco che identifica l'utente all'interno del database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String codFiscale
\end_layout

\begin_layout Standard
Contiene il codice fiscale dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- ArrayList<Badge>
\end_layout

\begin_layout Standard
Array contenente tutti i badge guadagnati da un utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio punteggio
\end_layout

\begin_layout Standard
Contiene alcune statistiche riguardanti le risposte date e i punti guadagnati
 dall'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nome
\end_layout

\begin_layout Standard
Contiene il nome dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String cognome
\end_layout

\begin_layout Standard
Contiene il cognome dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String email
\end_layout

\begin_layout Standard
Contiene l'indirizzo email dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nickname 
\end_layout

\begin_layout Standard
Contiene l'username assegnato all'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String password
\end_layout

\begin_layout Standard
Contiene la password dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String ruolo
\end_layout

\begin_layout Standard
Contiene il ruolo che l'utente ha all'interno dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean ammAA
\end_layout

\begin_layout Standard
True = L'utente è un amministratore azienda; False = L'utente è un amministrator
e sicurezza
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- DataOra dataModPass
\end_layout

\begin_layout Standard
Contiene la data e l'ora dell'ultima modifica alla password
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nuovaPass
\end_layout

\begin_layout Standard
Contiene la password che dovrà essere scritta nel database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int trofei
\end_layout

\begin_layout Standard
Contiene il numero di trofei guadagnati
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Dipendente()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Dipendente(int id, String cf, String n, String c, String e, String nn,
 String p, String r, int pu, String np, int trf)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Dipendente(boolean aA, DataOra dmp, String np, String mail, String nick,
 String pass, String codfisc, int i)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series default
Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\series bold

\begin_inset Newline newline
\end_inset

+ int getId()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setId(int id)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCodFiscale()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCodFiscale(Stirng codFiscale)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<Badge> getBadges()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setBadges(ArrayList<Badge> badges)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void addBadge(Badge badge)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getPunteggio()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunteggio(Punteggio punteggio)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNome(String nome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCognome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCognome(String cognome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getEmail()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setEmail(String email)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNickname()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNickname(String nickname)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getPassword()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPassword(String password)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getRuolo()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRuolo(String ruolo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String toStringID()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isAmmAA()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAmmAA(boolean ammAA)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DataOra getDataModPass()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void SetDataModPass(DataOra dataModPass)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNuovaPass()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNuovaPass(String nuovaPass)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getTrofei()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTrofei(int trofei)
\series default

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Domanda
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per le domande che dovranno essere
 trasmesse ai vari front-end e le relative risposte che da questi verranno
 indirizzate al back-end
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeAS 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.condivisi.Domanda 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.ConnectionUtils 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DashboardActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DatiActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DomandaActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.PunteggiActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.TimerNotifica
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int id 
\end_layout

\begin_layout Standard
Numero univoco che identifica la domanda all'interno del database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio punteggio 
\end_layout

\begin_layout Standard
Punteggio attribuito alla domanda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String tipologia 
\end_layout

\begin_layout Standard
Identifica la tipologia della domanda (ex.
 Risposta multipla, risposta aperta, ecc...)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- ArrayList<String> risposte 
\end_layout

\begin_layout Standard
Conterrà tutte le possibili risposte
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int corretta
\end_layout

\begin_layout Standard
Identifica all'interno della lista 
\emph on
risposte 
\emph default
quella corretta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String testo 
\end_layout

\begin_layout Standard
Contiene il testo della domanda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int rispostaData 
\end_layout

\begin_layout Standard
Identifica qual'è stata la risposta selezionata da un dipendente.
 rispostaData=-1 se non è ancora stata selezionata alcuna risposta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean mobile
\end_layout

\begin_layout Standard
Identifica se la domanda è stata proposta o dovrà essere proposta sarà destinata
 ad un dispositivo mobile
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int tempo
\end_layout

\begin_layout Standard
Identifica il tempo permesso per rispondere alla domanda.
 tempo=-1 se non è stato assegnato un parametro temporale alla domanda (ovvero
 si potrà rispondere alla domanda impiegando quanto 
\begin_inset Quotes eld
\end_inset

tempo si vuole
\begin_inset Quotes erd
\end_inset

)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String ambito
\end_layout

\begin_layout Standard
Identifica il 
\begin_inset Quotes eld
\end_inset

settore
\begin_inset Quotes erd
\end_inset

 di appartenenza della domanda (per esempio se la domanda è attinente alle
 norme anti-incendio oppure a quelle anti-infortunistica)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean internaAzienda
\end_layout

\begin_layout Standard
Indica se la domanda può essere proposta ai Dipendenti in quanto selezionata
 dall'Amminstratore Sicurezza
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Domanda(int i, Punteggio p, String ti, ArrayList<String> r, int c, String
 te, int rd, boolean m, int sec, String a, boolean inA)
\series default
 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold
+ int getId()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setId(int id)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getPunteggio()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunteggio(Punteggio punteggio)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getTipologia()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTipologia(String tipologia)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<String> getRisposte()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRisposte(ArrayList<String> risposte)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getCorretta()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCorretta(int corretta)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getTesto()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTesto(String testo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getRispostaData()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRispostaData(int rispostaData)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isMobile()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMobile(boolean mobile)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getTempo()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTempo(int tempo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getAmbito()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAmbito(String ambito)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isInternaAzienda()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setInternaAzienda(boolean internaAzienda)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Login
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i tentativi
 di autenticarsi all'interno della piattaforma
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Itemize

\family typewriter
desktop.logic.ControlLogin
\end_layout

\begin_layout Itemize

\family typewriter
desktop.logic.DatiLogin
\end_layout

\begin_layout Itemize

\family typewriter
desktop.view.Login
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.ConnectionUtils
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.IntentIntegrator
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.LoginActivity
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.TimerNotifica
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String username
\end_layout

\begin_layout Standard
Username dell'account che tenta di fare login
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String password
\end_layout

\begin_layout Standard
Password dell'account che tenta di fare login
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Login() 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Login(String u, String p) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ String getUsername()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setUsername(String username)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getPassword()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPassword(String password)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Punteggio
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i punteggi sia
 dei dipendenti che dell'intera azienda.
 
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int punti 
\end_layout

\begin_layout Standard
Indica i punti accumulati da un dipendenti O i punti accumulati da tutti
 i dipendenti dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- double mediaPuntiAzienda 
\end_layout

\begin_layout Standard
Indica il punteggio medio di tutti i dipendenti dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int puntiPrec 
\end_layout

\begin_layout Standard
Indica il numero di punti ottenuti dal Dipendente direttamente successivo
 al Dipendente 
\begin_inset Quotes eld
\end_inset

proprietario
\begin_inset Quotes erd
\end_inset

 all'interno della classifica dei punteggi (ovvero colui che ha meno punti
 del proprietario di questo oggetto)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int puntiSuc 
\end_layout

\begin_layout Standard
Indica il numero di punti ottenuti dal Dipendente direttamente precedente
 al Dipendente 
\begin_inset Quotes eld
\end_inset

proprietario
\begin_inset Quotes erd
\end_inset

 all'interno della classifica dei punteggi (ovvero colui che ha più punti
 del proprietario di questo oggetto)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int nDomRisp 
\end_layout

\begin_layout Standard
Indica il numero di domande a cui o il Dipendente o tutti i Dipendenti dell'azie
nda hanno dato risposta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int nRispCorr 
\end_layout

\begin_layout Standard
Indica il numero di domande a cui o il Dipendente o tutti i Dipendenti dell'azie
nda hanno dato risposta corretta
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+Punteggio() 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Punteggio(int punti) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ int getPunti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunti(int punti)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Recupero
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti le richieste
 di recupero password.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String email 
\end_layout

\begin_layout Standard
Indirizzo email a cui si dovrà inviare la mail con la password
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String codFiscale 
\end_layout

\begin_layout Standard
Codice fiscale dell'account a cui è collegato anche la mail
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Recupero(String email, String codFiscale) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Recupero()
\series default
 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ String getEmail()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setEmail(String email)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCodFiscale()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCodFiscale(String codFiscale)
\end_layout

\end_body
\end_document
