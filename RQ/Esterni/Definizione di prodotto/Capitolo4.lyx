#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{longtable}
\usepackage{multirow}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 4
\tocdepth 4
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Specifica Back-end
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename img/BackEnd.png
	scale 42.5

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Back-end, diagramma dei package
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Package com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Package 
\series bold
com
\emph default
\SpecialChar \-

\emph on
.
\emph default
\SpecialChar \-

\emph on
sa
\emph default
\SpecialChar \-

\emph on
fe
\emph default
\SpecialChar \-

\emph on
ty
\emph default
\SpecialChar \-

\emph on
Ga
\emph default
\SpecialChar \-

\emph on
me
\emph default
\SpecialChar \-

\emph on
.
\emph default
\SpecialChar \-

\emph on
back
\emph default
\SpecialChar \-

\emph on
.\SpecialChar \-
con\SpecialChar \-
nec\SpecialChar \-
tion
\series default
 e le sue relazioni
\end_layout

\end_inset


\end_layout

\end_inset


\series bold

\begin_inset Newline newline
\end_inset

Tipo, obiettivo e funzione del componente:
\series default
 contiene gli oggetti deputati all'interfacciamento dei vari front-end con
 il back-end
\series bold

\begin_inset Newline newline
\end_inset

Relazioni d'uso di altre componenti:
\series default
 utilizza la classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le richieste che provengono dai vari front-end verso gli strati
 inferiori del back-end
\series bold

\begin_inset Newline newline
\end_inset

Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del back-end
 verso i vari front-end
\emph on

\begin_inset Newline newline
\end_inset


\series bold
\emph default
Attività svolte e dati trattati:
\series default
 fa da connettore fra i vari front-end e il back-end, divenendo il componente
 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion.WebConnection
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 la classe si occupa di gestire le richieste sia del 
\emph on
Front-end Web
\emph default
 che del 
\emph on
Front-end Desktop
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dai 
\emph on
Front-end Web 
\emph default
e 
\emph on
Desktop
\emph default
 ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra i 
\emph on
Front-End Web 
\emph default
e 
\emph on
Desktop
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- GestioneDati dati
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ WebConnection(GestioneDati d)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean loginDip(String username, String password)
\end_layout

\begin_layout Standard

\series bold
+ boolean loginAdmin(String username, String password)
\end_layout

\begin_layout Standard

\series bold
+ Dipendente getDati(Login l)
\end_layout

\begin_layout Standard

\series bold
+ Punteggio getPunteggio(Login l)
\end_layout

\begin_layout Standard

\series bold
+ Punteggio getStat(Login l)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Badge> getBadge(Login l, int n)
\end_layout

\begin_layout Standard

\series bold
+ boolean modPassD(Dipendente dip)
\end_layout

\begin_layout Standard

\series bold
+ boolean modPassA(Dipendente dip)
\end_layout

\begin_layout Standard

\series bold
+ boolean modMail(Dipendente d, String mail)
\end_layout

\begin_layout Standard

\series bold
+ boolean resetPassD(Recupero r)
\end_layout

\begin_layout Standard

\series bold
+ boolean resetPassA(Recupero r)
\end_layout

\begin_layout Standard

\series bold
+ Domanda mostraDomanda(Login l)
\end_layout

\begin_layout Standard

\series bold
+ boolean setRisposta(Login l,Domanda risposta)
\end_layout

\begin_layout Standard

\series bold
+ boolean posticipa(Login l, Domanda d)
\end_layout

\begin_layout Standard

\series bold
+ void logout(Login l)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Domanda> getElencoDomande()
\end_layout

\begin_layout Standard

\series bold
+ boolean aggiungiDomanda(Domanda d)
\end_layout

\begin_layout Standard

\series bold
+ boolean cancellaDomanda(Domanda d)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Dipendente> getElencoDipendenti()
\end_layout

\begin_layout Standard

\series bold
+ boolean setTrofei(Dipendente d, int n)
\end_layout

\begin_layout Standard

\series bold
+ boolean aggiungiDipendente(Dipendente d)
\end_layout

\begin_layout Standard

\series bold
+ boolean cancellaDipendente(Dipendente d)
\end_layout

\begin_layout Standard

\series bold
+ boolean modDipendente(Dipendente dOld, Dipendente dNew)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Badge> getBadgesAS() 
\end_layout

\begin_layout Standard

\series bold
+ boolean assegnaBadge(Domanda D, Login l)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Dipendente> getPunteggi()
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
nec
\series bold
\SpecialChar \-

\series default
tion.MobileConnection
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 
\series medium
la classe si occupa di gestire le richieste del 
\emph on
Front-End Mobile
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per inoltrare le richieste provenienti dal 
\emph on
Front-end Mobile 
\emph default
ai controlli logici del 
\emph on
Back-End
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dalla classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
back\SpecialChar \-
.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler\SpecialChar \-
.\SpecialChar \-
Ge\SpecialChar \-
stio\SpecialChar \-
ne\SpecialChar \-
Da\SpecialChar \-
ti 
\series default
per inoltrare le elaborazioni compiute dagli strati inferiori del 
\emph on
Back-End
\emph default
 verso il 
\emph on
Front-End Mobile
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 fa da connettore fra il 
\emph on
Front-End Mobile
\emph default
 e il back-end, divenendo parte del componente 
\emph on
Presenter
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- GestioneDati dati
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Parser parser
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ ApplicazioniConnection(GestioneDati d, Parser p)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean login(String username, String password)
\end_layout

\begin_layout Standard

\series bold
+ Dipendente getDati(Login l)
\end_layout

\begin_layout Standard

\series bold
+ Punteggio getStat(Login l)
\end_layout

\begin_layout Standard

\series bold
+ void modPass(Dipendente d)
\end_layout

\begin_layout Standard

\series bold
+ void modMail(Dipendente d, String mail)
\end_layout

\begin_layout Standard

\series bold
+ void resetPass(Recupero r)
\end_layout

\begin_layout Standard

\series bold
+ Domanda mostraDomanda(Login l)
\end_layout

\begin_layout Standard

\series bold
+ void posticipa(Login l, Domanda d)
\end_layout

\begin_layout Standard

\series bold
+ boolean rispondi(Login l, Domanda d)
\end_layout

\begin_layout Standard

\series bold
+ void logout(Login l)
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Badge> getBadge(Login l, int n)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler
\series default
 e le sue relazioni
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 contiene gli oggetti deputati al controllo dei dati immessi nei vari front-end
 e del loro eventuale reindirizzamento verso l'
\emph on
Access-Tier
\emph default
 per una eventuale memorizzazione.
 Inoltre si occupa di chiedere all'
\emph on
Access-Tier
\emph default
 di recuperare dati richiesti e di poi inviarli al 
\emph on
Presentation-Tier
\emph default
 affinchè vengano spediti al front-end di competenza
\series bold

\begin_inset Newline newline
\end_inset

Relazioni d'uso di altre componenti:
\series default
 utilizza la classe 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me\SpecialChar \-
.\SpecialChar \-
ba\SpecialChar \-
ck\SpecialChar \-
.ac\SpecialChar \-
cess 
\series default
per memorizare i dati da lui elaborati
\series bold

\begin_inset Newline newline
\end_inset

Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dal package 
\series bold
com\SpecialChar \-
.\SpecialChar \-
sa\SpecialChar \-
fe\SpecialChar \-
ty\SpecialChar \-
Ga\SpecialChar \-
me.back.\SpecialChar \-
con\SpecialChar \-
nec\SpecialChar \-
tion 
\series default
per elaborare i dati in arrivo ed in invio da e per i vari front-end
\emph on

\begin_inset Newline newline
\end_inset


\series bold
\emph default
Attività svolte e dati trattati:
\series default
 è deputato alla computazione su tutti i dati da e per i front-end 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneBadgeAS
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire le operazioni che l'Amministratore
 Sicurezza può effettuare sui Badge.
 In particolare potrà recuperare la lista di tutti i badge disponibili all'inter
no dell'azienda.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize
back.access.DAOBadge
\end_layout

\begin_layout Itemize
back.condivisi.Badge
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAOBadge accessB
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneBadgeAS(DAOBadge accessB)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> getBadgesAS()
\end_layout

\begin_layout Standard
Metodo per ottenere tutti i badge possibili.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier 
\emph default
affinchè ritorni un array con gli oggetti 
\emph on
Badge
\series bold
 
\series default
\emph default
che rappresenteranno tutti i badge presenti nel database.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneBadgeD
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire le operazioni che i Dipedenti possono
 effettuare sui propri Badge.
 In particolare:
\end_layout

\begin_layout Itemize

\series bold
Ottenere
\series default
 la lista dei badge fino ad ora acquisiti
\end_layout

\begin_layout Itemize

\series bold
Controllare
\series default
 che, rispondendo ad una domanda, si abbia diritto ad acquisire uno o più
 nuovi badge
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Badge
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAOBadge accessB
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAODipendenti accessDip
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAODomande accessDom
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLog log
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLogin login
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
public GestioneBadgeD(DAOBadge accessB,DAODipendenti accessDip, DAODomande
 accessDom, GestioneLog log, GestioneLogin login)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
public ArrayList<Badge> getBadgeD(Login l, int n)
\end_layout

\begin_layout Standard
Metodo per ottenere i dati dei badge per un dato utente.
\end_layout

\begin_layout Standard
Dovrà verificare che esista un 
\emph on
Dipendente
\emph default
 collegato alla 
\emph on
Login
\emph default
 passata come parametro.
 Se esiste, allora dovrà recuperare l'oggetto 
\emph on
Dipendente
\emph default
 e la lista dei suoi badge, quindi seleziona i primi 
\emph on
n
\emph default
 Badge e li restituisce.
 Nel caso non esistesse il 
\emph on
Dipendente
\emph default
 o non avesse alcun 
\emph on
Badge
\emph default
, la funzione dovrà ritornare 
\series bold
null
\emph on
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\emph default
public boolean assegnaBadge(Domanda D, Login l)
\end_layout

\begin_layout Standard
Metodo per controllare se l'utente ha soddisfatto dei requisiti per ottenere
 un badge.
\end_layout

\begin_layout Standard
Dovrà verificare che esista un 
\emph on
Dipendente
\emph default
 collegato alla 
\emph on
Login
\emph default
 passata come parametro.
 Se esiste, allora dovrà controllare tutti i possibili 
\emph on
Badge
\emph default
 assegnabili al 
\emph on
Dipendente
\emph default
 e, nel caso ne trovasse almeno uno, dovrà chiamare la funzione deputata
 all'assegnazione di tale 
\emph on
Badge
\emph default
 nella classe 
\emph on
DAOBadge
\emph default
 e chiamare la classe 
\emph on
GestioneLog
\emph default
 deputata alla scrittura sul file di log di tale assegnazione.
\end_layout

\begin_layout Standard
Se dovesse aver assegnato almeno un 
\emph on
Badge
\emph default
, la funzione dovrà ritornare 
\series bold
true
\series default
, altrimenti 
\series bold
false
\series default
\emph on
.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDati
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe è la componente principale del Design Pattern Façade.
 Contiene tutti i prototipi dei metodi pubblici delle altre classi contenute
 nel package e la funzione principale della classe 
\emph on
GestioneDati
\emph default
 è quella di reindirizzare le chiamate alle classi competenti.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneRecupero
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Badge
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- GestioneRecupero gestioneRecupero
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLogin gestioneLogin
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneDomandeD gestioneDomandeD
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneDomandeAS gestioneDomandeAS
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneDipendentiD gestioneDipendentiD
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneDipendentiAA gestioneDipendentiAA
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneBadgeD gestioneBadgeD
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneBadgeAS gestioneBadgeAS
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestionePunteggiD gestionePunteggiD
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestionePunteggiAA gestionePunteggiAA
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneDati(GestioneRecupero gr,GestioneLogin gl, GestioneDomandeD gdd,
 GestioneDomandeAS gda, GestioneDipendentiD gdip, GestioneDipendentiAA gdipa,
 GestioneBadgeD gbd, GestioneBadgeAS gba, GestionePunteggiD gpd, GestionePuntegg
iAA gpaa)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> getBadgesAS()
\end_layout

\begin_layout Standard
Metodo per ottenere tutti i badge possibili.
\end_layout

\begin_layout Standard
Dovrà interrogare la classse 
\emph on
GestioneBadgeAS 
\emph default
affinchè ritorni un array con gli oggetti 
\emph on
Badge
\series bold
 
\series default
\emph default
che rappresenteranno tutti i badge presenti nel database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> getBadgeD(Login l, int n)
\end_layout

\begin_layout Standard
Metodo per ottenere i dati delle badge per un dato utente.
\end_layout

\begin_layout Standard
Dovrà interrogare la classse 
\emph on
GestioneBadgeD 
\emph default
affinchè ritorni un array con gli oggetti 
\emph on
Badge
\series bold
 
\series default
\emph default
che rappresenteranno tutti i badge guadagnati da un 
\emph on
Dipendente
\emph default
 rappresentato dall'oggetto 
\emph on
Login
\emph default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean assegnaBadge(Domanda D, Login l)
\end_layout

\begin_layout Standard
Metodo per controllare se l'utente ha soddisfatto dei requisiti per ottenere
 un badge.
\end_layout

\begin_layout Standard
Dovrà interrogare la classse 
\emph on
GestioneBadgeD 
\emph default
affinchè assegni un nuovo badge al 
\emph on
Dipendente
\emph default
 data la 
\emph on
Domanda
\emph default
 in oggetto.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Dipendente> getElencoDipendenti()
\end_layout

\begin_layout Standard
Metodo per ottenere i dati dei dipendenti dell'azienda.
\end_layout

\begin_layout Standard
Dovrà interrogare la classse 
\emph on
GestioneDipendentiAA 
\emph default
affinchè ritorni un array contente oggetti 
\emph on
Dipendente
\emph default
 rappresentazione di tutti i Dipendenti presenti in database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean aggiungiDipendente(Dipendente Dip) 
\end_layout

\begin_layout Standard
Metodo per aggiungere un dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiAA 
\emph default
atta ad inserire il 
\emph on
Dipendente
\emph default
 in oggetto all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean cancellaDipendente(Dipendente Dip)
\end_layout

\begin_layout Standard
Metodo per eliminare un dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiAA 
\emph default
atta a eliminare il 
\emph on
Dipendente
\emph default
 in oggetto all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modDipendente(Dipendente newDip, Dipendente oldDip)
\end_layout

\begin_layout Standard
Metodo per modificare i dati di un dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiAA 
\emph default
atta a modificare i dati del 
\emph on
Dipendente oldDip
\emph default
 con quelli contenuti in 
\emph on
newDip 
\emph default
all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Dipendente getDati(Login l)
\end_layout

\begin_layout Standard
Metodo che consente di reperire le informazioni di un dipendente a partire
 dal suo login.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiD 
\emph default
atta a reperire i dati del 
\emph on
Dipendente
\emph default
, identificato dall'oggetto 
\emph on
Login
\emph default
 passato come parametro, all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modificaPass(Dipendente dip)
\end_layout

\begin_layout Standard
Metodo che consente la modifica della password da parte di un dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiD 
\emph default
atta a modificare la password del 
\emph on
Dipendente
\emph default
 all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modificaEmail(Dipendente dip, String nEmail)
\end_layout

\begin_layout Standard
Metodo che consente la modifica della mail da parte di un dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiD 
\emph default
atta a modificare l'indirizzo email del 
\emph on
Dipendente
\emph default
 all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Domanda> getElencoDomande()
\end_layout

\begin_layout Standard
Metodo per ottenere la lista di tutte le domande.
\end_layout

\begin_layout Standard
Dovrà interrogare la classse 
\emph on
GestioneDomandeAS 
\emph default
affinchè ritorni un array contente oggetti 
\emph on
Domanda
\emph default
 rappresentazione di tutte le Domande scelte dall'Amministratore Sicurezza
 all'interno del database centrale per l'azienda.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean addDomanda(Domanda Dom)
\end_layout

\begin_layout Standard
Metodo per inserire una domanda dal server domande al server dell'azienda.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDomandeAS 
\emph default
atta ad inserire una nuova 
\emph on
Domanda
\emph default
 fra quelle proponibili ai 
\emph on
Dipendenti
\emph default
 dell'azienza.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean remDomanda(Domanda Dom)
\end_layout

\begin_layout Standard
Metodo per eliminare una domanda dal server dell'azienda.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDomandeAS 
\emph default
atta a rimuovere una 
\emph on
Domanda
\emph default
 fra quelle proponibili ai 
\emph on
Dipendenti
\emph default
 dell'azienza.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Domanda getDomandaD(Login l) 
\end_layout

\begin_layout Standard
Metodo che consente di recuperare una domanda.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDomandeD 
\emph default
atta a recuperare una domanda a cui il 
\emph on
Dipendente
\emph default
, identificato dall'oggetto 
\emph on
Login
\emph default
, o non ha ancora visualizzato, o ha chiesto di posticiparla.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean setRisposta(Login l,Domanda risposta)
\end_layout

\begin_layout Standard
Metodo che si occupa di controllare la risposta data da un dipendente ad
 una domanda e tenta di scrivere tali informazioni sul DB.
 Se la risposta è corretta assegna il punteggio al dipendente.
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDomandeD 
\emph default
atta a controllare che la risposta data dal 
\emph on
Dipendente
\emph default
, identificato dall'oggetto 
\emph on
Login
\emph default
 una domanda e tenta di scrivere tali informazioni sul DB.
 Se la risposta è corretta assegna il punteggio al dipendente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean loginAdmin(Login login)
\end_layout

\begin_layout Standard
Metodo per il login degli utenti amministratori.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato alla gestione dei tentativi di login da parte degli
 
\emph on
Amministratori 
\emph default
nella classe 
\emph on
GestioneLogin.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean loginUser(Login login) 
\end_layout

\begin_layout Standard
Metodo per il login dei Dipendenti.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato alla gestione dei tentativi di login da parte dei 
\emph on
Dipendenti 
\emph default
nella classe 
\emph on
GestioneLogin.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ ArrayList<Dipendente> getPunteggi()
\end_layout

\begin_layout Standard
Metodo per ottenere i punteggi medi dell'azienda e i punteggi di tutti i
 dipendenti.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato al recupero di tutti i punteggi dei 
\emph on
Dipendenti 
\emph default
nella classe 
\emph on
GestionePunteggiAA.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean setTrofei(Dipendente Dip, int n)
\end_layout

\begin_layout Standard
Metodo per modificare i trofei di un dipendente.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato alla modifica del numero di trofei di un 
\emph on
Dipendente 
\emph default
nella classe 
\emph on
GestionePunteggiAA.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ Punteggio getStatisticheD(Login l) 
\end_layout

\begin_layout Standard
Metodo che consente di recuperare le statistiche di un determinato dipendente.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato al recupero delle statistiche di un 
\emph on
Dipendente 
\emph default
nella classe 
\emph on
GestionePunteggiD.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean posticipa(Login l, Domanda d)
\end_layout

\begin_layout Standard
Metodo che si occupa di controllare quando una domanda viene posticipata.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato alla posticipazione di una domanda sottoposta ad un
 
\emph on
Dipendente 
\emph default
nella classe 
\emph on
GestionePunteggiD.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ void logout(Login l)
\end_layout

\begin_layout Standard
Metodo per segnalare al sistema il logout di un utente.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato alla gestione dei logout
\emph on
 
\emph default
nella classe 
\emph on
GestioneLogin.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ Punteggio getStatisticheGlob(Login l) 
\end_layout

\begin_layout Standard
Metodo che consente di recuperare le statistiche globali.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato al recupero delle statistiche dell'intera azienda all'intern
o di 
\emph on
GestionePunteggiD 
\emph default
a partire dal 
\emph on
Dipendente
\emph default
 identificato tramite l'oggetto 
\emph on
Login
\emph default
 passato come parametro.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean recuperoD(Recupero dip)
\end_layout

\begin_layout Standard
Metodo che consente ad un Dipendente di resettare la propria password.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato al reset della password di un 
\emph on
Dipendente
\emph default
 all'interno della classe 
\emph on
GestioneRecupero
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean recuperoA(Recupero amm)
\end_layout

\begin_layout Standard
Metodo che consente ad un amministratore di resettare la propria password.
\end_layout

\begin_layout Standard
Dovrà 
\begin_inset Quotes eld
\end_inset

passare la chiamata
\begin_inset Quotes erd
\end_inset

 al metodo deputato al reset della password di un 
\emph on
Amministratore
\emph default
 all'interno della classe 
\emph on
GestioneRecupero.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean modPassA(Dipendente admin)
\end_layout

\begin_layout Standard
Metodo per modificare la password di un amministratore
\end_layout

\begin_layout Standard
Dovrà chiamare la funzione contenuta in 
\emph on
GestioneDipendentiD 
\emph default
atta a modificare la password del 
\emph on
Dipendente
\emph default
 all'interno del database.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDipendentiAA
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutte le operazioni che un Amministratore
 Azienda potrà effettuare per gestire gli account sia Dipendente che Amministrat
ore
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAODipendenti accessDip
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneDipendentiAA(DAODipendenti accessDip)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<Dipendente> getElencoDipendenti()
\end_layout

\begin_layout Standard
Metodo per ottenere i dati dei dipendenti dell'azienda.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè restituisca un array contente tutti gli oggetti 
\emph on
Dipendente
\emph default
 relativi ai Dipendenti registrati nel sistema.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean aggiungiDipendente(Dipendente Dip)
\end_layout

\begin_layout Standard
Metodo per aggiungere un dipendente.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè inserisca il contenuto dell'oggetto 
\emph on
Dipendente
\emph default
 passato come parametro all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean cancellaDipendente(Dipendente Dip)
\end_layout

\begin_layout Standard
Metodo per eliminare un dipendente.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè elimini
\emph on
 
\emph default
il 
\emph on
Dipendente
\emph default
 passato come parametro dall'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modDipendente(Dipendente newDip, Dipendente oldDip)
\end_layout

\begin_layout Standard
Metodo per modificare i dati di un dipendente.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè modifichi i dati del 
\emph on
Dipendente
\emph default
 all'interno del database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modPassA(Dipendente admin)
\end_layout

\begin_layout Standard
Metodo per modificare la password di un amministratore.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè modifichi i dati dell'
\emph on
Amministratore
\emph default
 all'interno del database.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDipendentiD
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutte le operazioni che un Dipendente
 può effettuare sul suo account.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAODipendenti daoDipendenti
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLog gestioneLog
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneDipendentiD(DAODipendenti d, GestioneLog g)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Dipendente getDati(Login l)
\end_layout

\begin_layout Standard
Metodo che consente di reperire le informazioni di un dipendente a partire
 dal suo login.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè gli ritorni un oggetto 
\emph on
Dipendente
\emph default
 costruito a partire dal 
\emph on
Login
\emph default
 passato come parametro.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modificaPass(Dipendente dip)
\end_layout

\begin_layout Standard
Metodo che consente la modifica della password da parte di un dipendente.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè modifichi la password del 
\emph on
Dipendente 
\emph default
con quella contenuta all'interno dell'oggetto 
\emph on
Dipendente
\emph default
 passato come parametro.
 Se non ci sono problemi, dovrà chiamare la classe deputata alla gestione
 del file di log affinchè scriva che il 
\emph on
Dipendente
\emph default
 ha modificato la sua password.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modificaEmail(Dipendente dip, String nEmail)
\end_layout

\begin_layout Standard
Metodo che consente la modifica della mail da parte di un dipendente.
\end_layout

\begin_layout Standard
Dovrà interrogare l'
\emph on
Access-Tier
\emph default
 affinchè modifichi la mail del 
\emph on
Dipendente
\emph default
 con la stringa passata in oggetto.
 Quindi, se non ci sono problemi, dovrà chiamare la classe deputata alla
 gestione del file di log affinchè scriva che il 
\emph on
Dipendente
\emph default
 ha modificato il suo indirizzo email.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAODipendenti getDaoDipendenti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDaoDipendenti(DAODipendenti daoDip) 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ GestioneLog getGestioneLog() 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setGestioneLog(GestioneLog gestioneLog)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDomandeAS
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutte le operazioni che un Amministratore
 Sicurezza può effettuare sull'elenco delle domande.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAODomande accessDom
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneDomandeAS(DAODomande accessDom)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Domanda> getElencoDomande()
\end_layout

\begin_layout Standard
Metodo per ottenere la lista di tutte le domande.
\end_layout

\begin_layout Standard
Dovrà chiamare l'
\emph on
Access-Tier
\emph default
 affinchè gli restituisca un array di tutte le domande selezionate fino
 ad ora dall'
\emph on
Amministratore
\emph default
 fra quelle disponibili nel database centrale.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean addDomanda(Domanda Dom)
\end_layout

\begin_layout Standard
Metodo per inserire una domanda dal server domande al server dell'azienda.
\end_layout

\begin_layout Standard
Dovrà chiamare l'
\emph on
Access-Tier
\emph default
 affinchè inserisca la 
\emph on
Domanda
\emph default
 all'interno delle domande selezionate dall'
\emph on
Amministratore.
\series bold
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean remDomanda(Domanda Dom)
\end_layout

\begin_layout Standard
Metodo per eliminare una domanda dal server dell'azienda.
\end_layout

\begin_layout Standard
Dovrà chiamare l'
\emph on
Access-Tier
\emph default
 affinchè elimini la 
\emph on
Domanda
\emph default
 dalle domande selezionate dall'
\emph on
Amministratore.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneDomandeD
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutte le operazioni che i Dipendenti
 possono effettuare sulle domande, in particolare:
\end_layout

\begin_layout Itemize

\series bold
Rispondere
\series default
 ad una domanda
\end_layout

\begin_layout Itemize

\series bold
Ottenere
\series default
 una nuova domanda
\end_layout

\begin_layout Itemize

\series bold
Posticipare 
\series default
una domanda
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAODomande daoDomande
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAOPunteggi daoPunteggi
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAODipendenti daoDipendenti
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestionePunteggiD gestionePunteggiD
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLog gestioneLog
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneBadgeD gestioneBadge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneDomandeD(DAODomande d, DAOPunteggi dp, DAODipendenti dd, GestionePunte
ggiD g, GestioneLog gl, GestioneBadgeD gbd)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Domanda getDomandaD(Login l)
\end_layout

\begin_layout Standard
Metodo che consente di recuperare una domanda.
\end_layout

\begin_layout Standard
Dovrà prelevare l'utente caratterizzato dalla 
\emph on
Login
\emph default
 passata come parametro e, nel caso in cui venga trovato, dovrà interrogare
 il database in modo tale da fornire una 
\emph on
Domanda
\emph default
 candidata ad avere risposta da parte del 
\emph on
Dipendente
\emph default
.
 Quindi, nel caso venga trovata una 
\emph on
Domanda
\emph default
, dovrà chiamare l'
\emph on
Access-Tier 
\emph default
affinchè scriva nel database e la classe deputata alla gestione dei log
 affinchè scriva nel file di log che è stata sottoposta una nuova 
\emph on
Domanda
\emph default
 al 
\emph on
Dipendente.
\series bold
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean setRisposta(Login l,Domanda risposta)
\end_layout

\begin_layout Standard
Metodo che si occupa di controllare la risposta data da un dipendente ad
 una domanda e tenta di scrivere tali informazioni sul DB.
 Se la risposta è corretta assegna il punteggio al dipendente.
\end_layout

\begin_layout Standard
Dovrà prelevare l'utente caratterizzato dalla 
\emph on
Login
\emph default
 passata come parametro e, nel caso in cui venga trovato, dovrà interrogare
 il database in modo tale che scriva che alla 
\emph on
Domanda 
\emph default
è stata data risposta.
 Quindi, nel caso in cui sia stata data risposta corretta, dovrà controllare
 che nel database esista un 
\emph on
Badge
\emph default
 assegnabile
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Ad esempio se si è raggiunto un certo numero di risposte corrette
\end_layout

\end_inset

.
 Infine dovrà scrivere nel file di log che il 
\emph on
Dipendente
\emph default
 ha risposto alla 
\emph on
Domanda
\emph default
.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean posticipa(Login l, Domanda d)
\end_layout

\begin_layout Standard
Metodo che si occupa di controllare quando una domanda viene posticipata.
\end_layout

\begin_layout Standard
Dovrà prelevare l'utente caratterizzato dalla 
\emph on
Login
\emph default
 passata come parametro e, nel caso in cui venga trovato, dovrà interrogare
 il database in modo tale che scriva che la 
\emph on
Domanda
\emph default
 è stata posticipata.
 Nel caso non ci siano problemi, dovrà quindi scrivere nel file di log che
 la 
\emph on
Domanda
\emph default
 è stata posticipata dal 
\emph on
Dipendente.
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ DAODomande getDaoDomande()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDaoDomande(DAODomande daoDom)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ GestionePunteggiD getGestionePunteggiD()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setGestionePunteggiD(GestionePunteggiD gestionePunteggiD)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ GestioneLog getGestioneLog()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setGestioneLog(GestioneLog gestioneLog)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DAOPunteggi getDaoPunteggi()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDaoPunteggi(DAOPunteggi daoPunteggi)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DAODipendenti getDaoDipendenti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDaoDipendenti(DAODipendenti daoDipendenti)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneLog
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di creare le stringhe che poi andranno inserite
 all'interno nel file di log.
\begin_inset Newline newline
\end_inset

La struttura dovrà essere di questo tipo 
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Gli elementi variabili che variano a seconda del messaggio da inserire sono
 specificati metodo per metodo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\emph on
<TIPO_OPERAZIONE> DATA ORA 
\begin_inset Quotes eld
\end_inset

usr=
\begin_inset Quotes erd
\end_inset

USERNAME <VARI>
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.UpdateLog
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- UpdateLog updateLog
\end_layout

\begin_layout Standard

\series bold
- String percorso
\end_layout

\begin_layout Standard

\series bold
- String log
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneLog(UpdateLog u)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ UpdateLog getUpdateLog()
\end_layout

\begin_layout Standard
Metodo che consente di recuperare il riferimento all'oggetto di tipo UpdateLog
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void setUpdateLog(UpdateLog updateLog)
\end_layout

\begin_layout Standard
Metodo che consente di impostare il riferimento all'oggetto di tipo UpdateLog
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviLogin(Login l)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo un login effettuato correttamente.
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

LOGIN
\begin_inset Quotes erd
\end_inset


\series bold
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void scriviLogout(Login l) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo un logout effettuato correttamente
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

LOGOUT
\begin_inset Quotes erd
\end_inset


\series bold
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void scriviDomRic(Login l, Domanda d) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che una domanda viene ricevuta da un Dipendente.
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

DOMANDA RICEVUTA
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id della domanda>
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviDomProp(Login l, Domanda d) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che una domanda viene proposta ad un Dipendente 
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

DOMANDA PROPOSTA
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id della domanda>
\series bold
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void scriviDomPost(Login l, Domanda d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che una domanda è stata posticipata da un Dipendente
 
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

DOMANDA POSTICIPATA
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id della domanda>
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviDomRisp(Login l, Domanda d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che un Dipendente risponde ad una Domanda 
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

DOMANDA RISPOSTA
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id della domanda>
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviModPassD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che un dipendente modifica la propria password 
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

MODIFICA PASS D
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviModEmailD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che un dipendente modifica la propria email 
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

MODIFICA EMAIL D
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviOttenimentoBadge(Dipendente d, Badge b)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che un dipendente ottiene un badge
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

OTTENIMENTO BADGE
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

badge=
\begin_inset Quotes erd
\end_inset

 + <nome badge>
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
 void scriviAddDip(Dipendente d) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che l'AA aggiunge un dipendente
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

AGGIUNTO DIPENDENTE
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviDelDip(Dipendente d) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che l'AA rimuove un dipendente
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

RIMOSSO DIPENDENTE
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviModDip(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che l'AA modifica un dipendente
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

MODIFICATO DIPENDENTE
\begin_inset Quotes erd
\end_inset


\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviAddDomande(Domanda [] d)
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che l'AS aggiunge una o più domande
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE = 
\begin_inset Quotes eld
\end_inset

AGGIUNTA DOMANDA
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id delle domande>
\emph default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void scriviDelDomande(Domanda [] d) 
\end_layout

\begin_layout Standard
Metodo che si occupa di inviare alla classe UpdateLog la stringa da inserire
 nel file di log dopo che l'AS rimuove una o più domande
\end_layout

\begin_layout Standard

\emph on
TIPO_OPERAZIONE= 
\begin_inset Quotes eld
\end_inset

RIMOSSA DOMANDA
\begin_inset Quotes erd
\end_inset

 
\end_layout

\begin_layout Standard

\emph on
VARI = 
\begin_inset Quotes eld
\end_inset

id dom=
\begin_inset Quotes erd
\end_inset

 + <id delle domande>
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneLogin
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutte le richieste di login e logout,
 sia da parte di Dipendenti che di Amministratori (Azienda o Sicurezza che
 sia)
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizza le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAOLogin access
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- GestioneLog log
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneLogin(DAOLogin access, GestioneLog log)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean loginAdmin(Login login)
\end_layout

\begin_layout Standard
Metodo per controllare la correttezza dei dati di un tentativo di autenticazione
 nel sistema come Amministratore
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean loginUser(Login login)
\end_layout

\begin_layout Standard
Metodo per controllare la correttezza dei dati di un tentativo di autenticazione
 nel sistema come Dipendente
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ void logout(Login l)
\end_layout

\begin_layout Standard
Metodo per segnalare al sistema il logout di un utente
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestionePunteggiAA
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i punteggi,
 in particolare fornendo metodi per recuperare i punteggi di tutti i Dipendenti
 iscritti al sistema o per poter modificare il numero di trofei assegnati
 ad un utente
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre utilizza le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAOPunteggi accessP
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAODipendenti accessDip
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestionePunteggiAA(DAOPunteggi accessP, DAODipendenti accessDip)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Dipendente> getPunteggi()
\end_layout

\begin_layout Standard
Metodo per ottenere i punteggi medi dell'azienda e i punteggi di tutti i
 dipendenti.
 Dovrà costruire un array di oggetti 
\emph on
Dipendente
\emph default
 con al loro interno i dati di ogni Dipendente (per poterlo identificare)
 e al loro interno un oggetto 
\emph on
Punteggio
\emph default
 con sia i punteggi del Dipendente che dell'intera azienda.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean setTrofei(Dipendente Dip, int n)
\end_layout

\begin_layout Standard
Metodo per modificare il numero di trofei di un dipendente
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestionePunteggiD
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i Badge, sia
 per quanto riguarda il loro recupero dal database, che una loro eventuale
 modifica.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Standard
Inoltre utilizza le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAOPunteggi daoPunteggi
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAOBadge daoBadge
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- DAODipendenti daoDipendenti
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestionePunteggiD(DAOPunteggi dP, DAOBadge dB, DAODipendenti dD)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Punteggio getStatisticheD(Login l)
\end_layout

\begin_layout Standard
Metodo che consente di recuperare le statistiche di un Dipendente identificato
 dal 
\emph on
Login
\emph default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Punteggio getStatisticheGlob(Login l)
\end_layout

\begin_layout Standard
Metodo che consente di recuperare le statistiche dell'intera azienda e del
 Dipendente identificato dal 
\emph on
Login.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
con
\series bold
\SpecialChar \-

\series default
trol
\series bold
\SpecialChar \-

\series default
ler.GestioneRecupero
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire le richieste di recupero delle password.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Standard
Inoltre verranno utilizzate le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- DAODipendenti accessDip
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ GestioneRecupero(DAODipendenti accessDip)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean recuperoD(Recupero dip)
\end_layout

\begin_layout Standard
Metodo che controlla la validità dei dati inseriti dall'utente e, nel caso
 questi siano validi, genera una nuova password, andando ad inserirla nel
 database.
\end_layout

\begin_layout Standard
Dovrà prima di tutto controllare che i dati inseriti siano corretti, chiamando
 l'
\emph on
Access-Tier 
\emph default
affinchè verifichi che 
\emph on
codice fiscale
\emph default
 e indirizzo
\emph on
 mail
\emph default
 appartengano effettivamente all'account identificato dall'
\emph on
username
\emph default
.
 Se i controlli non dovessero segnalare incongruenze, allora il metodo dovrà
 generare una nuova password e modificare quella che è attualmente presente
 nel database.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ boolean recuperoA(Recupero amm)
\end_layout

\begin_layout Standard
Metodo che consente ad un amministratore di resettare la propria password.
\end_layout

\begin_layout Standard
Dovrà generare la password casuale, quindi dovrà chiamare l'
\emph on
Access-Tier
\emph default
 affinchè modifichi la riga riferita ai dati di accesso dell'Amministratore.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
- String generaPassCasuale()
\end_layout

\begin_layout Standard
Metodo che genera una nuova password di 16 caratteri di lunghezza.
 Questa password dovrà contenere almeno un carattere maiuscolo, uno minuscolo,
 un numero e un carattere non alfa-numerico contenuto fra questi: 
\end_layout

\begin_layout Itemize
@
\end_layout

\begin_layout Itemize
#
\end_layout

\begin_layout Itemize
*
\end_layout

\begin_layout Itemize
+
\end_layout

\begin_layout Itemize
?
\end_layout

\begin_layout Itemize
^
\end_layout

\begin_layout Itemize
%
\end_layout

\begin_layout Itemize
&
\end_layout

\begin_layout Itemize
/
\end_layout

\begin_layout Itemize
$
\end_layout

\begin_layout Itemize
!
\end_layout

\begin_layout Itemize
+
\end_layout

\begin_layout Itemize
-
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com.safetyGame.back.access
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 il package contiene tutte le classi che si occupano di eseguire le operazioni
 che il 
\emph on
Controller-Tier
\emph default
 chiede che vengano eseguite sui database aziendali e centrali.
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 utilizza il package 
\series bold
com.safetyGame.back.condivisi 
\series default
per trasmettere le informazioni trovate all'interno dei database al 
\emph on
Controller-Tier
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato dall package 
\series bold
com.safetyGame.back.\SpecialChar \-
con\SpecialChar \-
trol\SpecialChar \-
ler 
\series default
per riceve tutti i dati dal database di cui ha bisogno per le sue elaborazioni
 e per essere mostrati agli utenti tramite i 
\emph on
Front-end
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati: 
\series default
fa da connettore fra il 
\emph on
Back-end
\emph default
 e i database, divenendo parte del componente 
\emph on
Model
\emph default
 del design pattern 
\emph on
MVP
\end_layout

\begin_layout Standard
Il seguente diagramma delle classi fornisce una panoramica di tutte le classi
 che compongono il package.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout

\emph on
Diagramma delle classi
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOBadge
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i Badge, sia
 per quanto riguarda il loro recupero dal database, che una loro eventuale
 modifica.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Badge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ ArrayList<Badge> badgeD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che prende le badge ottenute da un Dipendente dal database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> badgeAS()
\end_layout

\begin_layout Standard
Metodo che preleva tutti i badge esistenti nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean assegna(Dipendente d, Badge b)
\end_layout

\begin_layout Standard
Metodo che assegna una Badge ad un Dipendente
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAOBadge
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i Badge, sia
 per quanto riguarda il loro recupero dal database, che una loro eventuale
 modifica.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Badge
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Indirizzo serverAzienda;
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAOBadge(Indirizzo azienda)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> badgeD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che prende le badge ottenute da un Dipendente dal database.
 
\end_layout

\begin_layout Standard
Nel caso in cui la query dovesse ritornare un oggetto vuoto (ovvero la cui
 dimensione interna è uguale a zero), la funzione dovrà ritornare 
\series bold
null
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Badge> badgeAS()
\end_layout

\begin_layout Standard
Metodo che preleva tutti i badge esistenti nel database.
 
\end_layout

\begin_layout Standard
Nel caso in cui la query dovesse ritornare un oggetto vuoto (ovvero la cui
 dimensione interna è uguale a zero), la funzione dovrà ritornare 
\series bold
null
\series default
.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean assegna(Dipendente d, Badge b)
\end_layout

\begin_layout Standard
Metodo che assegna una Badge ad un Dipendente
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAODipendenti
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i Dipendenti.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneRecupero
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Recupero
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Dipendente getInfoD(Login l)
\end_layout

\begin_layout Standard
Metodo che prende le informazioni di un Dipendente dal database e le inserisce
 all'interno di un oggetto Dipedente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Dipendente getInfoA(Login l)
\end_layout

\begin_layout Standard
Metodo che prende le informazioni di un Amministratore dal database e le
 inserisce all'interno di un oggetto Dipedente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetPassD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che resetta il campo password modificata di un Dipendente nel database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetPassA(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che resetta il campo password modificata di un Amministratore nel
 database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean passD(Dipendente d, String pass)
\end_layout

\begin_layout Standard
Metodo che modifica la password di un Dipendente all'interno del Database
 secondo la stringa 
\emph on
pass.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean passA(Dipendente d, String pass)
\end_layout

\begin_layout Standard
Metodo che setta il campo password (e il campo data pass) di un Amministratore
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean mailD(Dipendente d, String mail)
\end_layout

\begin_layout Standard
Metodo che setta il campo mail di un Dipendente
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Dipendente> elencoDipendenti()
\end_layout

\begin_layout Standard
Metodo che ritorna l'elenco dei Dipendenti dell'Azienda
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean aggiungiDipendente(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che aggiunge un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean cancellaDipendente(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che cancella un Dipendente nelal database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modNome(Dipendente d, String nome)
\end_layout

\begin_layout Standard
Metodo che modifica il nome di un Dipendente nel database
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean modCognome(Dipendente d, String cognome)
\end_layout

\begin_layout Standard
Metodo che modifica il nome di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modCodFis(Dipendente d, String codfis)
\end_layout

\begin_layout Standard
Metodo che modifica il codice fiscale di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modUsername(Dipendente d, String username)
\end_layout

\begin_layout Standard
Metodo che modifica lo username di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ boolean modImpiego(Dipendente d, String impiego)
\end_layout

\begin_layout Standard
Metodo che modifica l'impiego di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean setTrofei(Dipendente d, int n)
\end_layout

\begin_layout Standard
Metodo che modifica il numero di trofei di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetD(Recupero r, String p)
\end_layout

\begin_layout Standard
Metodo che resetta la password (casuale) di un Dipendente
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetA(Recupero r, String p)
\end_layout

\begin_layout Standard
Metodo che resetta la password (casuale) di un Amministratore
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAODipendenti
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i Dipendenti.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Recupero
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Indirizzo serverAzienda;
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAODipendenti(Indirizzo azienda)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Dipendente getInfoD(Login l)
\end_layout

\begin_layout Standard
Metodo che prende le informazioni di un Dipendente dal database e le inserisce
 all'interno di un oggetto Dipedente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Dipendente getInfoA(Login l)
\end_layout

\begin_layout Standard
Metodo che prende le informazioni di un Amministratore dal database e le
 inserisce all'interno di un oggetto Dipedente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetPassD(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che resetta il campo password modificata di un Dipendente nel database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetPassA(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che resetta il campo password modificata di un Amministratore nel
 database.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean passD(Dipendente d, String pass)
\end_layout

\begin_layout Standard
Metodo che modifica la password di un Dipendente all'interno del Database
 secondo la stringa 
\emph on
pass.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph default
+ boolean passA(Dipendente d, String pass)
\end_layout

\begin_layout Standard
Metodo che setta il campo password (e il campo data pass) di un Amministratore
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean mailD(Dipendente d, String mail)
\end_layout

\begin_layout Standard
Metodo che setta il campo mail di un Dipendente
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Dipendente> elencoDipendenti()
\end_layout

\begin_layout Standard
Metodo che ritorna l'elenco dei Dipendenti dell'Azienda
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean aggiungiDipendente(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che aggiunge un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean cancellaDipendente(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che cancella un Dipendente nel database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ boolean modNome(Dipendente d, String nome)
\end_layout

\begin_layout Standard
Metodo che modifica il nome di un Dipendente nel database
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean modCognome(Dipendente d, String cognome)
\end_layout

\begin_layout Standard
Metodo che modifica il nome di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modCodFis(Dipendente d, String codfis)
\end_layout

\begin_layout Standard
Metodo che modifica il codice fiscale di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modUsername(Dipendente d, String username)
\end_layout

\begin_layout Standard
Metodo che modifica lo username di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean modImpiego(Dipendente d, String impiego)
\end_layout

\begin_layout Standard
Metodo che modifica l'impiego di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean setTrofei(Dipendente d, int n)
\end_layout

\begin_layout Standard
Metodo che modifica il numero di trofei di un Dipendente nel database
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetD(Recupero r, String p)
\end_layout

\begin_layout Standard
Metodo che resetta la password (casuale) di un Dipendente
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean resetA(Recupero r, String p)
\end_layout

\begin_layout Standard
Metodo che resetta la password (casuale) di un Amministratore
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAODomande
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti le domande.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Domanda getDomanda(Dipendente d) 
\end_layout

\begin_layout Standard
Metodo che, dato un Dipendente, fornisce un oggetto Domanda che conterrà
 una domanda a cui il Dipendente o non ha risposto (possibilmente avendo
 chiesto di posticiparla), o ha risposto erroneamente o non ha mai visto.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean posticipa(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che dovrà posticipare la Domanda sottoposta al Dipendente, in modo
 tale che questa possa essere riproposta più tardi allo stesso.
 
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean rispondi(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che permette di verificare la correttezza di una risposta data da
 un Dipendente ad una Domanda.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<Domanda> domandeA()
\end_layout

\begin_layout Standard
Metodo che ritorna un array contenente tutte le Domande che l'Amministratore
 Sicurezza ha scelto per l'azienda.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<Domanda> domande(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che ritorna un array contenente tutte le Domande a cui un dipendente
 ha dato risposta.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean addDomanda(Domanda d)
\end_layout

\begin_layout Standard
Metodo che aggiunge una Domanda al database aziendale, in modo tale che
 questa possa essere sottoposta ai Dipendenti
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean remDomanda(Domanda d)
\end_layout

\begin_layout Standard
Metodo che rimuove una Domanda dal database aziendale, in modo tale che
 questa non possa più essere sottoposta ai Dipendenti.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean scriviSottoposta(Dipendente dip, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che scrive sul database che una Domanda è stata sottoposta ad un
 Dipendente.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAODomande
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti le domande.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Standard
Inoltre le seguenti classi sono utilizzate:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Indirizzo serverDomande;
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Indirizzo serverAzienda;
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAODomande(Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
- Domanda prendiCampiDomanda(int id)
\end_layout

\begin_layout Standard
Metodo che recupera i campi che compongono un oggetto Domanda tramite il
 suo id.
 
\end_layout

\begin_layout Standard
Dovrà innanzitutto recuperare la domanda dal server centrale, quindi creare
 l'oggetto 
\emph on
Domanda
\emph default
 e inserire al suo interno i dati recuperati.
 Nel caso una delle query dovesse lanciare un'eccezione, la funzione dovrà
 ritornare un valore 
\series bold
null
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Domanda getDomanda(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che, dato un Dipendente, fornisce un oggetto Domanda che conterrà
 una domanda a cui il Dipendente o non ha risposto (possibilmente avendo
 chiesto di posticiparla), o ha risposto erroneamente o non ha mai visto.
\end_layout

\begin_layout Standard
Tale metodo dovrà controllare in primis che non esistano domande a cui il
 Dipendente non ha ancora dato risposta.
 Se questa condizione dovesse essere verificata, la funzione dovrà prelevare
 una nuova domanda da sottoporre al Dipendente combinando le domande a cui
 ha risposto erroneamente con quelle a cui non ha mai dato risposta e che
 non gli sono state sottoposte.
 Quindi ritornerà l'oggetto passato dalla funzione 
\family typewriter
prendiCampiDomanda(int id)
\begin_inset Newline newline
\end_inset


\family default
\series bold

\begin_inset Newline newline
\end_inset

+ boolean posticipa(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che dovrà posticipare la Domanda sottoposta al Dipendente, in modo
 tale che questa possa essere riproposta più tardi allo stesso.
 
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ boolean rispondi(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che permette di verificare la correttezza di una risposta data da
 un Dipendente ad una Domanda.
\end_layout

\begin_layout Standard
Dovrà confrontare la risposta data con l'id della risposta corretta e, nel
 caso coincidessero, assegnare i punti previsti al Dipendente.
 Quindi dovrà segnare in database sia che è stata data risposta, che l'esito,
 provvedendo eventualmente ad aggiornare il punteggio del Dipendente.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Domanda> domandeA()
\end_layout

\begin_layout Standard
Metodo che ritorna un array contenente tutte le Domande che l'Amministratore
 Sicurezza ha scelto per l'azienda.
\end_layout

\begin_layout Standard
Questo metodo dovrà recuperare gli indici di tutte le domande dal database
 aziendale, quindi comporre gli oggetti Domanda recuperando le informazioni
 dal database centrale.
 Infine inserirle dentro un array, quindi restituirlo alla funzione chiamante.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ ArrayList<Domanda> domande(Dipendente d, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che ritorna un array contenente tutte le Domande a cui un dipendente
 ha dato risposta.
\end_layout

\begin_layout Standard
Dovrà associare al Dipendente tutte le possibili domande e da queste estrarre
 quelle a cui ha dato risposta.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean addDomanda(Domanda d)
\end_layout

\begin_layout Standard
Metodo che aggiunge una Domanda al database aziendale, in modo tale che
 questa possa essere sottoposta ai Dipendenti
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean remDomanda(Domanda d)
\end_layout

\begin_layout Standard
Metodo che rimuove una Domanda dal database aziendale, in modo tale che
 questa non possa più essere sottoposta ai Dipendenti.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ boolean scriviSottoposta(Dipendente dip, Domanda dom)
\end_layout

\begin_layout Standard
Metodo che scrive sul database che una Domanda è stata sottoposta ad un
 Dipendente.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOFactory
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Standard
Inoltre le seguenti classi vengono utilizzate:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ DAOLogin creaDAOLogin(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di sottotipo di DAOLogin; più precisament
e dovrà esser il sottotipo corretto in relazione alla tipologia di database
 utilizzato.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAODipendenti creaDAODipendenti(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di sottotipo di DAODipendenti; più
 precisamente dovrà esser il sottotipo corretto in relazione alla tipologia
 di database utilizzato.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAODomande creaDAODomande (Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di sottotipo di DAODomande; più precisame
nte dovrà esser il sottotipo corretto in relazione alla tipologia di database
 utilizzato.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DAOBadge creaDAOBadge(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di sottotipo di DAOBadge
\series bold
;
\series default
 più precisamente dovrà esser il sottotipo corretto in relazione alla tipologia
 di database utilizzato.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DAOPunteggi creaDAOPunteggi(Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di sottotipo di DAOLogin; più precisament
e dovrà esser il sottotipo corretto in relazione alla tipologia di database
 utilizzato.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAOFactory
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Le seguenti classe verranno utilizzate:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAOFactory()
\end_layout

\begin_layout Standard
Costruttore della classe.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ DAOLogin creaDAOLogin(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di tipo SqlDAOLogin, visto che la
 classe riguarda Sql.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAODipendenti creaDAODipendenti(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di tipo SqlDAODipendenti, visto che
 la classe riguarda Sql.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAODOmande creaDAODomande (Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di tipo SqlDAODomande, visto che
 la classe riguarda Sql.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAOBadge creaDAOBadge(Indirizzo azienda)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di tipo SqlDAOBadge, visto che la
 classe riguarda Sql.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ DAOPunteggi creaDAOPunteggi(Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Metodo che dovrà restituire un oggetto di tipo SqlDAOPunteggi, visto che
 la classe riguarda Sql.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOLogin
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i tentativi
 di autenticazione all'interno del sistema.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ boolean loginAmministratore(Login l)
\end_layout

\begin_layout Standard
Metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema come amministratore.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean loginDipendente(Login l)
\end_layout

\begin_layout Standard
Metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema come dipendente.
 
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.SqlDAOLogin
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di gestire tutti i dati riguardanti i tentativi
 di autenticazione all'interno del sistema.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.acecss.SqlDAOFactory
\end_layout

\begin_layout Standard
Inoltre vengono utilizzate le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Indirizzo serverAzienda
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAOLogin(Indirizzo azienda)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean loginAmministratore(Login l)
\end_layout

\begin_layout Standard
Metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema come amministratore.
 Dovrà eseguire una query sul database aziendale cercando i dati contenuti
 nell'oggetto Login all'interno della tabella contenente le credenziali
 d'accesso degli amministratori e, nel caso non vengano lanciate eccezioni,
 dovrà ritornare 
\series bold
true
\series default
.
 Altrimenti 
\series bold
false
\series default
.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ boolean loginDipendente(Login l)
\end_layout

\begin_layout Standard
Metodo che controllerà la correttezza dei dati inseriti da un utente per
 connettersi al sistema come dipendente.
 Dovrà eseguire una query sul database aziendale cercando i dati contenuti
 nell'oggetto Login all'interno della tabella contenente le credenziali
 d'accesso dei Dipendenti e, nel caso non vengano lanciate eccezioni, dovrà
 ritornare 
\series bold
true
\series default
.
 Altrimenti 
\series bold
false
\series default
.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Interfaccia com.safetyGame.back.access.DAOPunteggi
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe si occuperà di recuperare i dati riguardanti i Punteggi dei
 Dipendenti e dell'Azienda.
 Fornisce l'interfaccia minima necessaria a tutte le classi derivate che
 dovranno offrire questo tipo di servizio
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.DAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GesteionePunteggiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Punteggio getStat(Dipendente d)
\end_layout

\begin_layout Standard
Metodo che dovrà ritornare un oggetto di tipo Punteggio con informazioni
 relative al solo Dipendente in oggetto.
 
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getGlobalStat(Dipendente dip)
\end_layout

\begin_layout Standard
Metodo che dovrà ritornare un oggetto di tipo Punteggio contenente le informazio
ni sia del Dipendente in oggetto, che di quei Dipendenti immediatamente
 prossimi a lui nella classifica dei punteggi, oltre che alle statistiche
 dell'azienda (come punteggio medio o numero di risposte corrette totali).
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
sa
\series bold
\SpecialChar \-

\series default
fe
\series bold
\SpecialChar \-

\series default
ty
\series bold
\SpecialChar \-

\series default
Ga
\series bold
\SpecialChar \-

\series default
me
\series bold
\SpecialChar \-

\series default
.
\series bold
\SpecialChar \-

\series default
back
\series bold
.access
\series default
.SqlDAOPunteggi
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
\emph on
Implementa back.access.DAOPunteggi.
\series default
\emph default

\begin_inset Newline newline
\end_inset

Questa classe si occuperà di recuperare i dati riguardanti i Punteggi dei
 Dipendenti e dell'Azienda da un database Sql.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Standard
Inoltre utilizzerà le seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.Indirizzo
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize
back.condivisi.Punteggio
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Indirizzo serverAzienda; 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Indirizzo serverDomande;
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ SqlDAOPunteggi(Indirizzo azienda, Indirizzo domande)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+ Punteggio getStat(Dipendente d)
\end_layout

\begin_layout Standard
Questo metodo dovrà ritornare un oggetto di tipo Punteggio con informazioni
 relative al solo Dipendente in oggetto.
 Per cui dovrà effettuare una query al database aziendale per recuperare
 il punteggio che il Dipendente ha ottenuto fino a quel momento e quindi
 ritornare l'oggetto Punteggio creato a partire da quanto risulta nel database.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Punteggio getGlobalStat(Dipendente dip)
\end_layout

\begin_layout Standard
Questo metodo dovrà ritornare un oggetto di tipo Punteggio contenente le
 informazioni sia del Dipendente in oggetto, che di quei Dipendenti immediatamen
te prossimi a lui nella classifica dei punteggi, oltre che alle statistiche
 dell'azienda (come punteggio medio o numero di risposte corrette totali).
 Dovrà interrogare ogni tabella che contiene questo tipo di informazioni
 e, una volta recuperate, incapsularle all'interno di un oggetto Punteggio,
 che dovrà restituire alla funzione chiamante.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.UpdateLog
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- PrintWriter out
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ UpdateLog(String s)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void finalize()
\end_layout

\begin_layout Standard
Distruttore della classe: dovrà chiudere lo stream al file di log
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ void scrivi(String s)
\end_layout

\begin_layout Standard
Aggiunge una nuova riga al file di log senza chiudere lo stream verso il
 file
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ void scriviChiudi(String s)
\end_layout

\begin_layout Standard
Aggiunge una nuova riga al file e chiude lo stream al file di log
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.access.Indirizzo
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe contiene tutti i metodi per l'esecuzione di query all'interno
 dei database (azienda e centrale)
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipententi
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOFactory
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- Connection conn
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- Statement connettore
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+
\begin_inset space ~
\end_inset

Indirizzo(String
\begin_inset space ~
\end_inset

database,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

utente,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

password)
\end_layout

\begin_layout Standard
Costruttore che imposta il valore degli attributi secondo il valore dei
 parametri passati.
\series bold

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

void
\begin_inset space ~
\end_inset

finalize()
\end_layout

\begin_layout Standard
Distruttore della classe Indirizzo: prova a chiudere la connessione al database
 quando l'oggetto viene distrutto.
 Nel caso di lancio di eccezioni, dovrà stampare a video un messaggio d'errore
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

inserisciRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

colonne,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

[]
\begin_inset space ~
\end_inset

valori)
\end_layout

\begin_layout Standard
Crea, a partire dall'array 
\emph on
valori
\emph default
, una stringa (che chiameremo 
\emph on
val
\emph default
) che contiene tutti i valori contenuti.
 Dovrà avere la seguente struttura:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{center}
\end_layout

\end_inset


\emph on
(?,?....,?)
\emph default

\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{center}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
ripetendo tanti punti interrogativi quanti sono gli elementi dentro all'array
\emph on
 valori
\emph default
.
 Quindi crea la query da eseguire sul database utilizzando:
\end_layout

\begin_layout Itemize

\series bold
tabella:
\series default
 nome della tabella su cui eseguire la query
\end_layout

\begin_layout Itemize

\series bold
colonne:
\series default
 colonne dove andranno inseriti i dati.
 Al contenuto di questa variabile dovrà essere applicata una funzione per
 eliminare eventuali caratteri di spaziatura
\end_layout

\begin_layout Itemize

\series bold
val: 
\end_layout

\begin_layout Standard
Quindi i punti interrogativi saranno sostituiti dai valori contenuti nell'array
 
\emph on
valori
\emph default
.
 Se la funzione di esecuzione della query non lancerà alcuna eccezione,
 questo metodo si concluderà ritornando 
\series bold
true
\series default
.
 Altrimenti dovrà ritornare 
\series bold
false
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

modificaRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

colonnevalori,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

controlli)
\end_layout

\begin_layout Standard
Modifica una tupla di valori all'interno della tabella indicata, selezionandola
 secondo i parametri di controllo indicati.
 Nel caso l'esecuzione della query ritornasse un'eccezione, la funzione
 dovrà ritoranre 
\series bold
false
\series default
, altrimenti 
\series bold
true
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

boolean
\begin_inset space ~
\end_inset

cancellaRiga(String
\begin_inset space ~
\end_inset

tabella,
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

controlli)
\end_layout

\begin_layout Standard
Elimina una tupla di valori all'interno della tabella indicata, seleziondola
 secondo i parametri di controllo indicati.
 Se la stringa 
\emph on
controlli
\emph default
 dovesse risultare vuota dopo aver applicato una funzione per eliminare
 eventuali caratteri di spaziatura, la funzione dovrà ritornare 
\series bold
false
\series default
, così come se l'esecuzione della query sul database dovesse sollevare un'eccezi
one.
 Altrimenti la funzione dovrà ritornare 
\series bold
true
\series default
.
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series bold
+
\begin_inset space ~
\end_inset

ResultSet selezione(String tabella, String colonne, String controlli, String
 extra)
\end_layout

\begin_layout Standard
Prevela una tupla di valori all'interno della tabella indicata, selezionandola
 secondo i parametri di controllo indicati.
 Dovrà eseguire una query sulla 
\emph on
tabella
\emph default
 indicata, prelevando i valori all'interno delle 
\emph on
colonne
\emph default
 secondo le condizioni indicate in 
\emph on
controlli
\emph default
 e 
\emph on
extra
\emph default
.
\end_layout

\begin_layout Standard
Nel caso dovesse essere sollevata un'eccezione, la funzione dovrà ritornare
 
\series bold
null.
 
\series default
Altrimenti dovrà ritornare quanto ritornato dalla query.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Package com.safetyGame.back.condivisi
\end_layout

\begin_layout Standard

\series bold
Tipo, obiettivo e funzione del componente:
\series default
 il package contiene le classi che conterranno le informazioni che dovranno
 essere condivise fra i vari strati del 
\emph on
Back-end
\end_layout

\begin_layout Standard

\series bold
Relazioni d'uso di altre componenti:
\series default
 non utilizza alcun componente del 
\emph on
Back-end
\end_layout

\begin_layout Standard

\series bold
Interfaccie con e relazioni d'uso da altre componenti:
\series default
 viene utilizzato da tutte le classi dei package 
\emph on
controller, access 
\emph default
e 
\emph on
connection
\emph default
 per trasmettere informazioni complesse
\end_layout

\begin_layout Standard

\series bold
Attività svolte e dati trattati:
\series default
 serve a trasferire le informazioni che dovranno essere condivise fra i
 vari package che compongono il 
\emph on
back-end
\emph default
.
 In particolare si occuperà di contenere le informazioni riguardanti:
\end_layout

\begin_layout Itemize

\series bold
Badge
\end_layout

\begin_layout Itemize

\series bold
Dipendenti
\end_layout

\begin_layout Itemize

\series bold
Domande
\end_layout

\begin_layout Itemize

\series bold
Login
\end_layout

\begin_layout Itemize

\series bold
Punteggi
\end_layout

\begin_layout Itemize

\series bold
Richieste di recupero password
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Badge
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Badge che
 sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.convidisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeAS
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String nome
\end_layout

\begin_layout Standard
Nome del badge
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String descrizione
\end_layout

\begin_layout Standard
Descrizione del badge (ex.
 la motivazione per cui si è guadagnato questo badge)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio soglia
\end_layout

\begin_layout Standard
Indica il quantitativo di punti necessari all'acquisizione del badge
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Badge(String nome, String d, Punteggio p)
\end_layout

\begin_layout Standard
Costruttore che dovrà impostare il valore degli attributi secondo il valore
 dei parametri passati.
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Badge()
\end_layout

\begin_layout Standard
Costruttore di default che dovrà inizializzare ogni attributo a 
\series bold
NULL
\series default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\series bold

\begin_inset Newline newline
\end_inset

+ String getNome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNome(String nome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getDescrizione()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setDescrizione(String descrizione)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getSoglia()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setSoglia(Punteggio soglia)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.DataOra
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per le date e le ore
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.badge
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

anno
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

mese
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

- int
\begin_inset space ~
\end_inset

giorno
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

ora
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

minuti
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

-
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

secondi
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+
\begin_inset space ~
\end_inset

DataOra(int
\begin_inset space ~
\end_inset

a,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

me,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

g,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

o,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

mi,
\begin_inset space ~
\end_inset

int
\begin_inset space ~
\end_inset

s) 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Costruttore che imposta gli attributi dell'oggetto alla data e all'ora specifica
ta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

DataOra() 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Costruttore di default che crea l'oggetto con la data e l'ora corrente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

static
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

aggiusta(int
\begin_inset space ~
\end_inset

parteData) 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Funzione statica che deve restituire la parte della data (ex.
 giorno) scritta con due cifre (ex.
 se si è al giorno 
\begin_inset Quotes eld
\end_inset

2
\begin_inset Quotes erd
\end_inset

, questa funzione deve restituire una stringa con scritto 
\begin_inset Quotes eld
\end_inset

02
\begin_inset Quotes erd
\end_inset

)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+
\begin_inset space ~
\end_inset

String
\begin_inset space ~
\end_inset

toString() 
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Restituisce una stringa dell'oggetto nel seguente formato:
\end_layout

\begin_layout Standard

\family typewriter
AAAA/MM/GG HH:MM:SS
\family default

\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ int getAnno()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAnno(int anno)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getMese()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMese(int mese)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getGiorno()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setGiorno(int giorno)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getOra()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setOra(int ora)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getMinuti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMinuti(int minuti)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getSecondi()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setSecondi(int secondi)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Dipendente
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i Dipendenti
 che sono stati inseriti all'interno del database aziendale
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOBadge 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Login 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Recupero 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiAA 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int id 
\end_layout

\begin_layout Standard
Numero univoco che identifica l'utente all'interno del database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String codFiscale
\end_layout

\begin_layout Standard
Contiene il codice fiscale dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- ArrayList<Badge>
\end_layout

\begin_layout Standard
Array contenente tutti i badge guadagnati da un utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio punteggio
\end_layout

\begin_layout Standard
Contiene alcune statistiche riguardanti le risposte date e i punti guadagnati
 dall'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nome
\end_layout

\begin_layout Standard
Contiene il nome dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String cognome
\end_layout

\begin_layout Standard
Contiene il cognome dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String email
\end_layout

\begin_layout Standard
Contiene l'indirizzo email dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nickname 
\end_layout

\begin_layout Standard
Contiene l'username assegnato all'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String password
\end_layout

\begin_layout Standard
Contiene la password dell'utente
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String ruolo
\end_layout

\begin_layout Standard
Contiene il ruolo che l'utente ha all'interno dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean ammAA
\end_layout

\begin_layout Standard
True = L'utente è un amministratore azienda; False = L'utente è un amministrator
e sicurezza
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- DataOra dataModPass
\end_layout

\begin_layout Standard
Contiene la data e l'ora dell'ultima modifica alla password
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String nuovaPass
\end_layout

\begin_layout Standard
Contiene la password che dovrà essere scritta nel database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int trofei
\end_layout

\begin_layout Standard
Contiene il numero di trofei guadagnati
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Dipendente()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Dipendente(int id, String cf, String n, String c, String e, String nn,
 String p, String r, int pu, String np, int trf)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Dipendente(boolean aA, DataOra dmp, String np, String mail, String nick,
 String pass, String codfisc, int i)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\series default
Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\series bold

\begin_inset Newline newline
\end_inset

+ int getId()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setId(int id)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCodFiscale()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCodFiscale(Stirng codFiscale)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<Badge> getBadges()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setBadges(ArrayList<Badge> badges)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void addBadge(Badge badge)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getPunteggio()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunteggio(Punteggio punteggio)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNome(String nome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCognome()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCognome(String cognome)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getEmail()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setEmail(String email)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNickname()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNickname(String nickname)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getPassword()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPassword(String password)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getRuolo()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRuolo(String ruolo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String toStringID()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isAmmAA()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAmmAA(boolean ammAA)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ DataOra getDataModPass()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void SetDataModPass(DataOra dataModPass)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getNuovaPass()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setNuovaPass(String nuovaPass)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getTrofei()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTrofei(int trofei)
\series default

\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Domanda
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per le domande che dovranno essere
 trasmesse ai vari front-end e le relative risposte che da questi verranno
 indirizzate al back-end
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande 
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi 
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Punteggio 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeAS 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD 
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.condivisi.Domanda 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.ConnectionUtils 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DashboardActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DatiActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.DomandaActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.PunteggiActivity 
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.TimerNotifica
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int id 
\end_layout

\begin_layout Standard
Numero univoco che identifica la domanda all'interno del database
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- Punteggio punteggio 
\end_layout

\begin_layout Standard
Punteggio attribuito alla domanda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String tipologia 
\end_layout

\begin_layout Standard
Identifica la tipologia della domanda (ex.
 Risposta multipla, risposta aperta, ecc...)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- ArrayList<String> risposte 
\end_layout

\begin_layout Standard
Conterrà tutte le possibili risposte
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int corretta
\end_layout

\begin_layout Standard
Identifica all'interno della lista 
\emph on
risposte 
\emph default
quella corretta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String testo 
\end_layout

\begin_layout Standard
Contiene il testo della domanda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int rispostaData 
\end_layout

\begin_layout Standard
Identifica qual'è stata la risposta selezionata da un dipendente.
 rispostaData=-1 se non è ancora stata selezionata alcuna risposta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean mobile
\end_layout

\begin_layout Standard
Identifica se la domanda è stata proposta o dovrà essere proposta sarà destinata
 ad un dispositivo mobile
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int tempo
\end_layout

\begin_layout Standard
Identifica il tempo permesso per rispondere alla domanda.
 tempo=-1 se non è stato assegnato un parametro temporale alla domanda (ovvero
 si potrà rispondere alla domanda impiegando quanto 
\begin_inset Quotes eld
\end_inset

tempo si vuole
\begin_inset Quotes erd
\end_inset

)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String ambito
\end_layout

\begin_layout Standard
Identifica il 
\begin_inset Quotes eld
\end_inset

settore
\begin_inset Quotes erd
\end_inset

 di appartenenza della domanda (per esempio se la domanda è attinente alle
 norme anti-incendio oppure a quelle anti-infortunistica)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- boolean internaAzienda
\end_layout

\begin_layout Standard
Indica se la domanda può essere proposta ai Dipendenti in quanto selezionata
 dall'Amminstratore Sicurezza
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Domanda(int i, Punteggio p, String ti, ArrayList<String> r, int c, String
 te, int rd, boolean m, int sec, String a, boolean inA)
\series default
 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold
+ int getId()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setId(int id)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ Punteggio getPunteggio()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunteggio(Punteggio punteggio)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getTipologia()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTipologia(String tipologia)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ ArrayList<String> getRisposte()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRisposte(ArrayList<String> risposte)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getCorretta()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCorretta(int corretta)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getTesto()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTesto(String testo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getRispostaData()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setRispostaData(int rispostaData)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isMobile()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setMobile(boolean mobile)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ int getTempo()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setTempo(int tempo)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getAmbito()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setAmbito(String ambito)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ boolean isInternaAzienda()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setInternaAzienda(boolean internaAzienda)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Login
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i tentativi
 di autenticarsi all'interno della piattaforma
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDipendentiD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDomandeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLog
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneLogin
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Itemize

\family typewriter
desktop.logic.ControlLogin
\end_layout

\begin_layout Itemize

\family typewriter
desktop.logic.DatiLogin
\end_layout

\begin_layout Itemize

\family typewriter
desktop.view.Login
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.ConnectionUtils
\end_layout

\begin_layout Itemize

\family typewriter
mobile.Utils.IntentIntegrator
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.LoginActivity
\end_layout

\begin_layout Itemize

\family typewriter
mobile.View.TimerNotifica
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String username
\end_layout

\begin_layout Standard
Username dell'account che tenta di fare login
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String password
\end_layout

\begin_layout Standard
Password dell'account che tenta di fare login
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Login() 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Login(String u, String p) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ String getUsername()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setUsername(String username)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getPassword()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPassword(String password)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Punteggio
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti i punteggi sia
 dei dipendenti che dell'intera azienda.
 
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODomande
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAOPunteggi
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Dipendente
\end_layout

\begin_layout Itemize

\family typewriter
back.condivisi.Domanda
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.ApplicazioniConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneDati
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestioneBadgeD
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiAA
\end_layout

\begin_layout Itemize

\family typewriter
back.controller.GestionePunteggiD
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- int punti 
\end_layout

\begin_layout Standard
Indica i punti accumulati da un dipendenti O i punti accumulati da tutti
 i dipendenti dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- double mediaPuntiAzienda 
\end_layout

\begin_layout Standard
Indica il punteggio medio di tutti i dipendenti dell'azienda
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int puntiPrec 
\end_layout

\begin_layout Standard
Indica il numero di punti ottenuti dal Dipendente direttamente successivo
 al Dipendente 
\begin_inset Quotes eld
\end_inset

proprietario
\begin_inset Quotes erd
\end_inset

 all'interno della classifica dei punteggi (ovvero colui che ha meno punti
 del proprietario di questo oggetto)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int puntiSuc 
\end_layout

\begin_layout Standard
Indica il numero di punti ottenuti dal Dipendente direttamente precedente
 al Dipendente 
\begin_inset Quotes eld
\end_inset

proprietario
\begin_inset Quotes erd
\end_inset

 all'interno della classifica dei punteggi (ovvero colui che ha più punti
 del proprietario di questo oggetto)
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int nDomRisp 
\end_layout

\begin_layout Standard
Indica il numero di domande a cui o il Dipendente o tutti i Dipendenti dell'azie
nda hanno dato risposta
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- int nRispCorr 
\end_layout

\begin_layout Standard
Indica il numero di domande a cui o il Dipendente o tutti i Dipendenti dell'azie
nda hanno dato risposta corretta
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+Punteggio() 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Punteggio(int punti) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ int getPunti()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setPunti(int punti)
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
com.safetyGame.back.condivisi.Recupero
\end_layout

\begin_layout Description

\series bold
Funzione 
\series default

\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe fungerà da contenitore per i dati riguardanti le richieste
 di recupero password.
\end_layout

\begin_layout Description
Relazioni
\begin_inset space ~
\end_inset

d'uso
\begin_inset space ~
\end_inset

con
\begin_inset space ~
\end_inset

altri
\begin_inset space ~
\end_inset

moduli 
\begin_inset space ~
\end_inset


\begin_inset Newline newline
\end_inset

Questa classe verrà utilizzata dalle seguenti classi:
\end_layout

\begin_layout Itemize

\family typewriter
back.access.SqlDAODipendenti
\end_layout

\begin_layout Itemize

\family typewriter
back.connection.WebConnection
\end_layout

\begin_layout Subsection*
Attributi
\end_layout

\begin_layout Standard

\series bold
- String email 
\end_layout

\begin_layout Standard
Indirizzo email a cui si dovrà inviare la mail con la password
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

- String codFiscale 
\end_layout

\begin_layout Standard
Codice fiscale dell'account a cui è collegato anche la mail
\end_layout

\begin_layout Subsection*
Metodi
\end_layout

\begin_layout Standard

\series bold
+ Recupero(String email, String codFiscale) 
\end_layout

\begin_layout Standard
Costruttore con parametri.
 Dovrà inizializzare i campi dati con le variabili passate
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ Recupero()
\series default
 
\end_layout

\begin_layout Standard
Costruttore di default senza parametri.
 I campi dati dovranno essere inizializzati con valori di default
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Vengono quindi definiti i metodi getter/setter per i vari attributi della
 classe.
 In particolare:
\begin_inset Newline newline
\end_inset


\series bold

\begin_inset Newline newline
\end_inset

+ String getEmail()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setEmail(String email)
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ String getCodFiscale()
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

+ void setCodFiscale(String codFiscale)
\end_layout

\end_body
\end_document
